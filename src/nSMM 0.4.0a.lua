versText="0.4.0a"
platform.apilevel = '2.2'
debug=0

--(c) onlypuppy7/chalex
--This code has been indented in places where it may not look necessary, this is in order to be able to collapse entire code categories in IDEs such as VSCode. Indents do not affect syntax in Lua :>

--------------------------
-----TEXTURE LIBRARY------
--------------------------
    --TILE TEXTURES
        texture_Ground=image.new
        texture_MysteryBox0=image.new("\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\000 \205d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246\000\128 \205d\246\000\128d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246\000\128d\246\000\128 \205d\246d\246d\246d\246 \205 \205 \205 \205 \205d\246d\246d\246d\246d\246\000\128 \205d\246d\246d\246 \205 \205\000\128\000\128\000\128 \205 \205d\246d\246d\246d\246\000\128 \205d\246d\246d\246 \205 \205\000\128d\246d\246 \205 \205\000\128d\246d\246d\246\000\128 \205d\246d\246d\246 \205 \205\000\128d\246d\246 \205 \205\000\128d\246d\246d\246\000\128 \205d\246d\246d\246d\246\000\128\000\128d\246 \205 \205 \205\000\128d\246d\246d\246\000\128 \205d\246d\246d\246d\246d\246d\246 \205 \205\000\128\000\128\000\128d\246d\246d\246\000\128 \205d\246d\246d\246d\246d\246d\246 \205 \205\000\128d\246d\246d\246d\246d\246\000\128 \205d\246d\246d\246d\246d\246d\246d\246\000\128\000\128d\246d\246d\246d\246d\246\000\128 \205d\246d\246d\246d\246d\246d\246 \205 \205d\246d\246d\246d\246d\246d\246\000\128 \205d\246d\246d\246d\246d\246d\246 \205 \205\000\128d\246d\246d\246d\246d\246\000\128 \205d\246\000\128d\246d\246d\246d\246d\246\000\128\000\128d\246d\246d\246\000\128d\246\000\128 \205d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128")
        texture_MysteryBox1=image.new
        texture_MysteryBox2=image.new("\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\000 \205\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\000\128 \205\128\168\000\128\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\000\128\128\168\000\128 \205\128\168\128\168\128\168\128\168 \205 \205 \205 \205 \205\128\168\128\168\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168 \205 \205\000\128\000\128\000\128 \205 \205\128\168\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168 \205 \205\000\128\128\168\128\168 \205 \205\000\128\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168 \205 \205\000\128\128\168\128\168 \205 \205\000\128\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168\128\168\000\128\000\128\128\168 \205 \205 \205\000\128\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168\128\168\128\168\128\168 \205 \205\000\128\000\128\000\128\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168\128\168\128\168\128\168 \205 \205\000\128\128\168\128\168\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168\128\168\128\168\128\168\128\168\000\128\000\128\128\168\128\168\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168\128\168\128\168\128\168 \205 \205\128\168\128\168\128\168\128\168\128\168\128\168\000\128 \205\128\168\128\168\128\168\128\168\128\168\128\168 \205 \205\000\128\128\168\128\168\128\168\128\168\128\168\000\128 \205\128\168\000\128\128\168\128\168\128\168\128\168\128\168\000\128\000\128\128\168\128\168\128\168\000\128\128\168\000\128 \205\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\128\168\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128")
        texture_EmptyBlock=image.new("\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\000\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\128 \205\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128 \205\000\128\000\128 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205 \205\000\128\000\000\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\000")
        texture_Brick=image.new
        texture_Bridge=image.new
    --OBJECT TEXTURES
        texture_mushroom=image.new("\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246d\246d\246\196\216\196\216\196\216d\246d\246\000\000\000\000\000\000d\246d\246\196\216\196\216\196\216d\246d\246d\246d\246d\246d\246d\246d\246d\246\000\000\000\000d\246\196\216\196\216\196\216\196\216\196\216d\246d\246d\246d\246d\246d\246d\246d\246\000\000d\246d\246\196\216\196\216\196\216\196\216\196\216d\246d\246d\246d\246d\246\196\216\196\216d\246d\246d\246d\246\196\216\196\216\196\216\196\216\196\216d\246d\246d\246d\246d\246\196\216\196\216\196\216d\246d\246d\246d\246\196\216\196\216\196\216d\246d\246d\246d\246d\246d\246d\246\196\216\196\216d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246d\246\000\000d\246\196\216\196\216\196\216\255\255\255\255\255\255\255\255\255\255\255\255\196\216\196\216\196\216d\246\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255d\246\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255d\246\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255d\246\255\255\000\000\000\000\000\000\000\000\000\000")
        
        texture_goomba1=image.new
        texture_goomba2=image.new
        texture_goomba3=image.new
        texture_goomba4=image.rotate(texture_goomba1,180)

        texture_L_koopa_R_1=image.new("\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\196\216\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\196\216\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\196\216\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\196\216d\246d\246\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000d\246d\246\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000d\246d\246\000\000\000\000\000\000d\246\255\255\196\216d\246\196\216\196\216\196\216d\246\196\216\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\196\216\196\216d\246\196\216d\246\196\216\196\216\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\196\216\196\216\196\216\196\216d\246\196\216\255\255\255\255\196\216\000\000\000\000d\246d\246d\246d\246\255\255\196\216\196\216\196\216d\246\196\216d\246\196\216\255\255\196\216\000\000\000\000\000\000d\246d\246d\246\255\255d\246\196\216d\246\196\216\196\216\196\216d\246\196\216d\246\000\000\000\000\000\000\000\000d\246\255\255\255\255\196\216d\246\196\216\196\216\196\216\196\216\196\216d\246\196\216\000\000\000\000\000\000\000\000d\246\255\255\196\216d\246\196\216d\246\196\216\196\216\196\216d\246\196\216d\246\000\000\000\000\000\000\000\000d\246\255\255d\246\196\216\196\216\196\216d\246\196\216d\246\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\255\255\196\216\196\216\196\216\196\216\196\216d\246\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\255\255\255\255\196\216\196\216\196\216d\246\196\216d\246\196\216\255\255\255\255\255\255\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255d\246\196\216\196\216\255\255\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\255\255\255\255\255\255\255\255\255\255d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000d\246d\246d\246\000\000\000\000")
        texture_L_koopa_R_2=image.newd\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\196\216\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\196\216\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\196\216\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\255\255d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\196\216d\246d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246d\246\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000d\246d\246d\246\000\000d\246d\246\000\000\196\216d\246\196\216\196\216\196\216d\246\196\216\000\000\000\000d\246d\246\000\000\000\000d\246d\246\000\000\196\216\196\216d\246\196\216d\246\196\216\196\216\196\216\000\000d\246d\246\000\000d\246d\246\255\255\196\216\196\216\196\216\196\216d\246\196\216\255\255\255\255\196\216\000\000\000\000d\246\000\000d\246d\246\255\255\196\216\196\216\196\216d\246\196\216d\246\196\216\255\255\196\216\000\000\000\000\000\000\000\000d\246d\246\255\255d\246\196\216d\246\196\216\196\216\196\216d\246\196\216d\246\000\000\000\000\000\000d\246d\246\255\255\255\255\196\216d\246\196\216\196\216\196\216\196\216\196\216d\246\196\216\000\000\000\000\000\000\000\000d\246\255\255\196\216d\246\196\216d\246\196\216\196\216\196\216d\246\196\216d\246\000\000\000\000\000\000\000\000d\246\255\255d\246\196\216\196\216\196\216d\246\196\216d\246\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\255\255\196\216\196\216\196\216\196\216\196\216d\246\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\255\255\255\255\196\216\196\216\196\216d\246\196\216d\246\196\216\255\255\255\255\255\255\000\000\000\000\000\000d\246d\246\255\255\255\255\255\255d\246\196\216\196\216\255\255\255\255\255\255\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246\255\255\255\255\255\255\255\255\255\255d\246d\246d\246\000\000\000\000d\246d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246")
        texture_R_koopa_R_3=image.rotate(texture_L_koopa_R_1,180)
        texture_R_koopa_R_1=image.newd\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\196\216d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\196\216d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\196\216d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255d\246d\246\196\216d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246d\246d\246\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000d\246d\246\000\000\000\000d\246d\246d\246\000\000\000\000\196\216d\246\196\216\196\216\196\216d\246\196\216\255\255d\246\000\000\000\000\000\000d\246d\246\000\000\000\000\196\216\196\216d\246\196\216d\246\196\216\196\216\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\196\216\255\255\255\255\196\216d\246\196\216\196\216\196\216\196\216\255\255d\246d\246\000\000\000\000\000\000\000\000\196\216\255\255\196\216d\246\196\216d\246\196\216\196\216\196\216\255\255d\246d\246d\246d\246\000\000\000\000d\246\196\216d\246\196\216\196\216\196\216d\246\196\216d\246\255\255d\246d\246d\246\000\000\000\000\000\000\196\216d\246\196\216\196\216\196\216\196\216\196\216d\246\196\216\255\255\255\255d\246\000\000\000\000\000\000\000\000d\246\196\216d\246\196\216\196\216\196\216d\246\196\216d\246\196\216\255\255d\246\000\000\000\000\000\000\000\000\196\216\196\216\196\216d\246\196\216d\246\196\216\196\216\196\216d\246\255\255d\246\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216d\246\196\216\196\216\196\216\196\216\196\216\255\255\000\000\000\000\000\000\000\000\255\255\255\255\255\255\196\216d\246\196\216d\246\196\216\196\216\196\216\255\255\255\255\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255\196\216\196\216d\246\255\255\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\255\255\255\255\255\255\255\255\255\255d\246d\246d\246\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000")
        texture_R_koopa_R_2=image.newd\246\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255\196\216d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255\196\216d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255\196\216d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\255\255d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246\196\216d\246\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000d\246d\246d\246d\246d\246d\246\000\000\000\000\196\216d\246\196\216\196\216\196\216d\246\196\216\000\000d\246d\246\000\000d\246d\246d\246\000\000\196\216\196\216\196\216d\246\196\216d\246\196\216\196\216\000\000d\246d\246\000\000\000\000d\246d\246\000\000\196\216\255\255\255\255\196\216d\246\196\216\196\216\196\216\196\216\255\255d\246d\246\000\000d\246d\246\000\000\196\216\255\255\196\216d\246\196\216d\246\196\216\196\216\196\216\255\255d\246d\246\000\000d\246\000\000\000\000d\246\196\216d\246\196\216\196\216\196\216d\246\196\216d\246\255\255d\246d\246\000\000\000\000\000\000\000\000\196\216d\246\196\216\196\216\196\216\196\216\196\216d\246\196\216\255\255\255\255d\246d\246\000\000\000\000\000\000d\246\196\216d\246\196\216\196\216\196\216d\246\196\216d\246\196\216\255\255d\246\000\000\000\000\000\000\000\000\196\216\196\216\196\216d\246\196\216d\246\196\216\196\216\196\216d\246\255\255d\246\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216d\246\196\216\196\216\196\216\196\216\196\216\255\255\000\000\000\000\000\000\000\000\255\255\255\255\255\255\196\216d\246\196\216d\246\196\216\196\216\196\216\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\196\216\196\216d\246\255\255\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000d\246d\246d\246\255\255\255\255\255\255\255\255\255\255d\246d\246d\246d\246d\246\000\000\000\000d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246\000\000")
        texture_L_koopa_R_3=image.rotate(texture_R_koopa_R_1,180)

        texture_L_koopa_G_1=image.newd\246\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246@\134\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246@\134\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246@\134\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246@\134d\246d\246\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000d\246d\246\000\000@\134@\134@\134@\134@\134\000\000\000\000\000\000d\246d\246\000\000\000\000\000\000d\246\255\255@\134d\246@\134@\134@\134d\246@\134\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255@\134@\134d\246@\134d\246@\134@\134\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255@\134@\134@\134@\134d\246@\134\255\255\255\255@\134\000\000\000\000d\246d\246d\246d\246\255\255@\134@\134@\134d\246@\134d\246@\134\255\255@\134\000\000\000\000\000\000d\246d\246d\246\255\255d\246@\134d\246@\134@\134@\134d\246@\134d\246\000\000\000\000\000\000\000\000d\246\255\255\255\255@\134d\246@\134@\134@\134@\134@\134d\246@\134\000\000\000\000\000\000\000\000d\246\255\255@\134d\246@\134d\246@\134@\134@\134d\246@\134d\246\000\000\000\000\000\000\000\000d\246\255\255d\246@\134@\134@\134d\246@\134d\246@\134@\134@\134\000\000\000\000\000\000\000\000\000\000\255\255@\134@\134@\134@\134@\134d\246@\134@\134@\134@\134\000\000\000\000\000\000\000\000\000\000\255\255\255\255@\134@\134@\134d\246@\134d\246@\134\255\255\255\255\255\255\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255d\246@\134@\134\255\255\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\255\255\255\255\255\255\255\255\255\255d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000d\246d\246d\246\000\000\000\000")
        texture_L_koopa_G_2=image.newd\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246@\134\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246@\134\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246@\134\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\255\255d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246@\134d\246d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246d\246\000\000\000\000@\134@\134@\134@\134@\134\000\000\000\000\000\000d\246d\246d\246\000\000d\246d\246\000\000@\134d\246@\134@\134@\134d\246@\134\000\000\000\000d\246d\246\000\000\000\000d\246d\246\000\000@\134@\134d\246@\134d\246@\134@\134@\134\000\000d\246d\246\000\000d\246d\246\255\255@\134@\134@\134@\134d\246@\134\255\255\255\255@\134\000\000\000\000d\246\000\000d\246d\246\255\255@\134@\134@\134d\246@\134d\246@\134\255\255@\134\000\000\000\000\000\000\000\000d\246d\246\255\255d\246@\134d\246@\134@\134@\134d\246@\134d\246\000\000\000\000\000\000d\246d\246\255\255\255\255@\134d\246@\134@\134@\134@\134@\134d\246@\134\000\000\000\000\000\000\000\000d\246\255\255@\134d\246@\134d\246@\134@\134@\134d\246@\134d\246\000\000\000\000\000\000\000\000d\246\255\255d\246@\134@\134@\134d\246@\134d\246@\134@\134@\134\000\000\000\000\000\000\000\000\000\000\255\255@\134@\134@\134@\134@\134d\246@\134@\134@\134@\134\000\000\000\000\000\000\000\000\000\000\255\255\255\255@\134@\134@\134d\246@\134d\246@\134\255\255\255\255\255\255\000\000\000\000\000\000d\246d\246\255\255\255\255\255\255d\246@\134@\134\255\255\255\255\255\255\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246\255\255\255\255\255\255\255\255\255\255d\246d\246d\246\000\000\000\000d\246d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246")
        texture_R_koopa_G_3=image.rotate(texture_L_koopa_G_1,180)
        texture_R_koopa_G_1=image.newd\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255@\134d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255@\134d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255@\134d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255d\246d\246@\134d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246d\246d\246\000\000\000\000\000\000@\134@\134@\134@\134@\134\000\000d\246d\246\000\000\000\000d\246d\246d\246\000\000\000\000@\134d\246@\134@\134@\134d\246@\134\255\255d\246\000\000\000\000\000\000d\246d\246\000\000\000\000@\134@\134d\246@\134d\246@\134@\134\255\255d\246d\246\000\000\000\000\000\000\000\000\000\000@\134\255\255\255\255@\134d\246@\134@\134@\134@\134\255\255d\246d\246\000\000\000\000\000\000\000\000@\134\255\255@\134d\246@\134d\246@\134@\134@\134\255\255d\246d\246d\246d\246\000\000\000\000d\246@\134d\246@\134@\134@\134d\246@\134d\246\255\255d\246d\246d\246\000\000\000\000\000\000@\134d\246@\134@\134@\134@\134@\134d\246@\134\255\255\255\255d\246\000\000\000\000\000\000\000\000d\246@\134d\246@\134@\134@\134d\246@\134d\246@\134\255\255d\246\000\000\000\000\000\000\000\000@\134@\134@\134d\246@\134d\246@\134@\134@\134d\246\255\255d\246\000\000\000\000\000\000\000\000@\134@\134@\134@\134d\246@\134@\134@\134@\134@\134\255\255\000\000\000\000\000\000\000\000\255\255\255\255\255\255@\134d\246@\134d\246@\134@\134@\134\255\255\255\255\000\000\000\000\000\000\000\000\000\000d\246\255\255\255\255\255\255@\134@\134d\246\255\255\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\255\255\255\255\255\255\255\255\255\255d\246d\246d\246\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\000\000\000\000d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000")
        texture_R_koopa_G_2=image.newd\246\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255@\134d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255@\134d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255@\134d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246\255\255\255\255\255\255d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246\255\255d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246@\134d\246\000\000\000\000\000\000@\134@\134@\134@\134@\134\000\000\000\000d\246d\246d\246d\246d\246d\246\000\000\000\000@\134d\246@\134@\134@\134d\246@\134\000\000d\246d\246\000\000d\246d\246d\246\000\000@\134@\134@\134d\246@\134d\246@\134@\134\000\000d\246d\246\000\000\000\000d\246d\246\000\000@\134\255\255\255\255@\134d\246@\134@\134@\134@\134\255\255d\246d\246\000\000d\246d\246\000\000@\134\255\255@\134d\246@\134d\246@\134@\134@\134\255\255d\246d\246\000\000d\246\000\000\000\000d\246@\134d\246@\134@\134@\134d\246@\134d\246\255\255d\246d\246\000\000\000\000\000\000\000\000@\134d\246@\134@\134@\134@\134@\134d\246@\134\255\255\255\255d\246d\246\000\000\000\000\000\000d\246@\134d\246@\134@\134@\134d\246@\134d\246@\134\255\255d\246\000\000\000\000\000\000\000\000@\134@\134@\134d\246@\134d\246@\134@\134@\134d\246\255\255d\246\000\000\000\000\000\000\000\000@\134@\134@\134@\134d\246@\134@\134@\134@\134@\134\255\255\000\000\000\000\000\000\000\000\255\255\255\255\255\255@\134d\246@\134d\246@\134@\134@\134\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255@\134@\134d\246\255\255\255\255\255\255d\246d\246\000\000\000\000\000\000\000\000d\246d\246d\246\255\255\255\255\255\255\255\255\255\255d\246d\246d\246d\246d\246\000\000\000\000d\246d\246d\246d\246\000\000\000\000\000\000\000\000\000\000\000\000d\246d\246d\246d\246d\246\000\000")
        texture_L_koopa_G_3=image.rotate(texture_R_koopa_G_1,180)

        texture_shell_R_1=image.new("\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\196\216\196\216\196\216\196\216d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216d\246d\246d\246d\246\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216d\246\196\216\196\216\196\216\196\216d\246\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\196\216d\246\196\216\196\216\196\216\196\216\196\216\196\216d\246\196\216\000\000\000\000\000\000\000\000\000\000\196\216d\246\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\246\196\216\000\000\000\000\000\000\000\000d\246\196\216d\246\196\216\196\216\196\216\196\216\196\216\196\216d\246\196\216d\246\000\000\000\000\000\000d\246\196\216\196\216\196\216d\246\196\216\196\216\196\216\196\216d\246\196\216\196\216\196\216d\246\000\000\000\000\196\216\196\216\196\216\196\216\196\216d\246d\246d\246d\246\196\216\196\216\196\216\196\216\196\216\000\000\255\255\255\255\255\255\196\216\196\216d\246\196\216\196\216\196\216\196\216d\246\196\216\196\216\255\255\255\255\255\255\255\255\255\255\255\255\255\255d\246\196\216\196\216\196\216\196\216\196\216\196\216d
        texture_shell_R_2=image.new("\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\196\216\196\216\196\216\196\216d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216d\246d\246d\246d\246\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216d\246\196\216\196\216\196\216\196\216d\246\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\196\216d\246\196\216\196\216\196\216\196\216\196\216\196\216d\246\196\216\000\000\000\000\000\000\000\000\000\000\196\216d\246\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\246\196\216\000\000\000\000\000\000\000\000d\246\196\216d\246\196\216\196\216\196\216\196\216\196\216\196\216d\246\196\216d\246\000\000\000\000\000\000d\246\196\216\196\216\196\216d\246\196\216\196\216\196\216\196\216d\246\196\216\196\216\196\216d\246\000\000\000\000\196\216\196\216\196\216\196\216\196\216d\246d\246d\246d\246\196\216\196\216\196\216\196\216\196\216\000\000\255\255\255\255\255\255\196\216\196\216d\246\196\216\196\216\196\216\196\216d\246\196\216\196\216\255\255\255\255\255\255\255\255\255\255\255\255\255\255d\246\196\216\196\216\196\216\196\216\196\216\196\216d\246\255\255\255\255\255\255\255\255\000\000\000\000d\246\255\255\255\255\196\216\196\216\196\216\196\216\196\216\196\216\255\255\255\255d\246\000\000\000\000\000\000d\246d\246d\246\255\255\255\255\196\216\196\216\196\216\196\216\255\255\255\255d\246d\246d\246\000\000\000\000d\246d\246d\246\000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000d\246d\246d\246\000\000\000\000d\246d\246\000\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\000\000\000\000d\246d\246\000\000\000\000d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\000\000")
        texture_shell_R_3=image.rotate(texture_shell_R_1,180)

        texture_shell_G_1=image.new("\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246@\134@\134@\134@\134d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\134@\134d\246d\246d\246d\246@\134@\134\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\134@\134d\246@\134@\134@\134@\134d\246@\134@\134\000\000\000\000\000\000\000\000\000\000\000\000@\134d\246@\134@\134@\134@\134@\134@\134d\246@\134\000\000\000\000\000\000\000\000\000\000@\134d\246@\134@\134@\134@\134@\134@\134@\134@\134d\246@\134\000\000\000\000\000\000\000\000d\246@\134d\246@\134@\134@\134@\134@\134@\134d\246@\134d\246\000\000\000\000\000\000d\246@\134@\134@\134d\246@\134@\134@\134@\134d\246@\134@\134@\134d\246\000\000\000\000@\134@\134@\134@\134@\134d\246d\246d\246d\246@\134@\134@\134@\134@\134\000\000\255\255\255\255\255\255@\134@\134d\246@\134@\134@\134@\134d\246@\134@\134\255\255\255\255\255\255\255\255\255\255\255\255\255\255d\246@\134@\134@\134@\134@\134@\134d
        texture_shell_G_2=image.new("\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246@\134@\134@\134@\134d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\134@\134d\246d\246d\246d\246@\134@\134\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\134@\134d\246@\134@\134@\134@\134d\246@\134@\134\000\000\000\000\000\000\000\000\000\000\000\000@\134d\246@\134@\134@\134@\134@\134@\134d\246@\134\000\000\000\000\000\000\000\000\000\000@\134d\246@\134@\134@\134@\134@\134@\134@\134@\134d\246@\134\000\000\000\000\000\000\000\000d\246@\134d\246@\134@\134@\134@\134@\134@\134d\246@\134d\246\000\000\000\000\000\000d\246@\134@\134@\134d\246@\134@\134@\134@\134d\246@\134@\134@\134d\246\000\000\000\000@\134@\134@\134@\134@\134d\246d\246d\246d\246@\134@\134@\134@\134@\134\000\000\255\255\255\255\255\255@\134@\134d\246@\134@\134@\134@\134d\246@\134@\134\255\255\255\255\255\255\255\255\255\255\255\255\255\255d\246@\134@\134@\134@\134@\134@\134d\246\255\255\255\255\255\255\255\255\000\000\000\000d\246\255\255\255\255@\134@\134@\134@\134@\134@\134\255\255\255\255d\246\000\000\000\000\000\000d\246d\246d\246\255\255\255\255@\134@\134@\134@\134\255\255\255\255d\246d\246d\246\000\000\000\000d\246d\246d\246\000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000d\246d\246d\246\000\000\000\000d\246d\246\000\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\000\000\000\000d\246d\246\000\000\000\000d\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\246\000\000")
        texture_shell_G_3=image.rotate(texture_shell_G_1,180)

        texture_brick_piece1=image.new("\008\000\000\000\008\000\000\000\000\000\000\000\016\000\000\000\016\000\001\000 M M \205 \205 \205 M M\000\000 M \205\000\128 \205\000\128 \205 M\000\000 \205 \205 \205\000\128 \205 \205 \205 M\000\128 \205 \205 \205\000\128 \205 \205 \205 \205\000\128 \205 \205 \205\000\128 \205 \205 M \205\000\128 \205\000\128 \205\000\128 \205 M M \205\000\128 \205 \205 \205 M M M M \205\000\128 \205 M\000\000")
        texture_brick_piece2=image.rotate(texture_brick_piece1,90)
        texture_brick_piece3=image.rotate(texture_brick_piece2,90)
        texture_brick_piece4=image.rotate(texture_brick_piece3,90)
    --MARIO
        --mario texture formatting: template,direction(L/R),powerStatus(0-2),animationSegment,starSegment(0-2)
            -- (example)               t            L               0              idle          --star1--
            --                                                                                   (optional)
        --SMALL MARIO
            tL0idle="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\160\181\160\181\196\216\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000d\242d\242\160\181\196\216d\242\196\216\196\216d\242\196\216\160\181d\242d\242\000\000\000\000\000\000\000\000d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\000\000\000\000\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\000\000\000\000\000\000\000\000\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\000\000\000\000"
            tL0walk1="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\000\000\000\000\000\000d\242d\242d\242\160\181\160\181\160\181\196\216\196\216\196\216\160\181\160\181\160\181\160\181d\242d\242\000\000d\242d\242\160\181\160\181\196\216\196\216\196\216d\242\196\216\160\181\160\181\000\000d\242d\242d\242\000\000\000\000\160\181\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000d\242d\242\000\000\000\000\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000\196\216\196\216\196\216\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\000\000\000\000"
            tL0walk2="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\196\216\196\216d\242\196\216\196\216\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216d\242d\242d\242\160\181\160\181\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216d\242d\242\160\181\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000"
            tL0walk3="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\000\000\160\181\196\216\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\160\181\160\181\160\181\160\181\160\181\196\216d\242d
            tL0jump="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\000\000d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242\160\181d\242\160\181\000\000\000\000\000\000\000\000\160\181d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181d\242d\242d\242d\242d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\196\216\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\000\000\000\000\160\181\000\000\000\000\196\216\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\000\000\160\181\000\000\000\000\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242\160\181\160\181\196\216d\242\196\216\196\216d\242\196\216\196\216\160\181\196\216\196\216\000\000d\242d\242d\242\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\000\000d\242\000\000\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\000\000\000\000\160\181\000\000"
            tL0drift="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\160\181d\242\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242\160\181d\242d\242\160\181d\242d\242\000\000\000\000\000\000d\242d\242\160\181\160\181d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\000\000\000\000\000\000\000\000\160\181\160\181d\242d\242d\242d\242d\242d\242\160\181d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\160\181\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\196\216\160\181d\242d\242d\242\196\216\196\216\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242\160\181\196\216\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d
            tL0death="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\000\000\196\216\196\216\196\216\196\216\196\216\196\216\000\000d\242\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242\160\181d\242d\242\160\181d\242\160\181d\242d\242d\242\000\000\000\000d\242d\242\160\181\160\181d\242\160\181d\242d\242\160\181d\242\160\181\160\181d\242d\242\000\000\000\000d\242d\242\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181d\242d\242\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181d\242d\242\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181d\242\160\181\160\181\160\181\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181d\242d\242d\242d\242d\242d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216d\242d\242d\242d\242\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\196\216\160\181\160\181\196\216\196\216\160\181\160\181\160\181\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216d\242\196\216\196\216d\242\196\216\160\181\160\181\160\181\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\000\000\000\000\000\000"
            tL0climb1="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000\000\000d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000d\242d\242d
            tL0climbd\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\160\181\160\181\160\181\160\181\160\181\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216d

            tR0idle="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\1605\1605\1605\1605\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\1605\1605\1605\1605\1605\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\1605\1605\1605\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242drdrdrdr\1605dr\1605\1605\160\181d\242\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdr\1605\1605\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181drdrdrdr\1605\1605\1605\1605d\242d\242d\242d\242d\242d\242d\242\1605drdrdrdr\1605\1605\1605\160\181\160\181\196\216\160\181\160\181\160\181\1605\1605\1605\1605\1605\1605\1605\1605\1605\160\181\160\181\160\181\196\216\160\181\160\181\196\216\160\181\160\181\160\181\1605\1605\1605\1605\1605\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\1605\1605drdrd\242d\242\160\181\196\216d\242\196\216\196\216d\242\196\216\160\181d\242d\242drdrdrdrd\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242drdrdrdrd\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242drdrdrdrdr\1605\196\216\196\216\196\216\196X\196X\196\216\196\216\196\216\1605drdrdr\1605\1605\1605\160\181\160\181\160\181\196X\255\127\255\127\196X\160\181\160\181\160\181\1605\1605\1605\1605\1605\160\181\160\181\160\181\160\181\255\127\255\127\255\127\255\127\160\181\160\181\160\181\160\181\1605\1605"
            tR0walk1="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\1605\1605\1605\1605\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196X\196X\1605\1605\1605\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242drdrdrdrdr\1605\1605\1605\160\181d\242\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdr\1605\1605\1605\160\181d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdr\1605\1605\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181drdrdrdrdr\1605\1605\1605d\242d\242d\242d\242d\242d\242d\242\1605drdrdrdrdr\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\1605\1605drdrdrdrd\242d\242\160\181\160\181\160\181\160\181\196\216\196\216\196\216\160\181\160\181\160\181d\242d\242d\242drd\242d\242d\242\1605\160\181\160\181\196\216d\242\196\216\196\216\196\216\160\181\160\181d\242d\242drd\242d\242dr\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\1605\160\181drdrdrdr\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\1605\1605\1605\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\1605\1605\160\181\160\181\196\216\196\216\196\216\196X\196X\196X\196\216\196\216\196\216\160\181\160\181\1605\1605\1605\160\181\160\181\160\181\1605\196X\255\127\255\127\255\127\196X\196X\196X\1605\1605\1605\1605\1605\1605\160\181\160\181\160\181\1605\255\127\255\127\255\127\255\127\255\127\255\127\1605\1605\1605\1605"
            tR0walk2="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196X\1605\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242drdrdrdrdr\1605\1605\1605\160\181d\242\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdr\1605\1605\1605\160\181d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242drdr\1605\1605\1605\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181drdrdrdr\1605\1605\1605\1605d\242d\242d\242d\242d\242d\242d\242\1605drdrdrdr\1605\1605\1605\160\181\160\181\196\216\160\181\160\181\160\181\1605dr\1605drdrdrdr\1605\1605\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181drdrdrdrdrdr\1605\1605\160\181\160\181\160\181\196\216\196\216d\242\196\216\196\216d\242drdrdrdrdr\1605\1605\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196X\196X\196Xdr\196X\196X\196X\196\216\160\181\160\181d\242d\242d\242\196\216\196\216\196\216\196X\196X\196X\1605\1605\196X\196X\196X\196\216\160\181d\242d\242\196\216\196\216\196\216\196X\196X\196X\196X\1605\1605\196X\196X\196X\196X\196\216\196\216\196\216\160\181\160\181\160\181\1605\1605\1605\1605\1605\1605\1605\1605\1605\1605\160\181\160\181\160\181\160\181\160\181\160\181\160\181\1605\1605\1605\1605\1605\1605\1605\1605\1605\160\181\160\181\160\181\160\181\1605\1605\1605\1605\1605\1605\1605"
            tR0walk3="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\1605\1605\1605\196X\196X\196X\196X\196X\196X\196X\196X\1605\1605\1605\1605\1605\1605\1605\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196X\1605\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196Xdr\1605\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242drdrdrdrdr\1605\1605\1605\160\181d\242\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdr\1605\1605\1605\160\181d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242dr\1605\1605\1605\1605\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181drdr\1605\1605\1605\1605\1605\1605d\242d\242d\242d\242d\242d\242d\242\1605drdrdrdrdrdrdr\160\181\160\181\160\181\160\181\196\216\160\181drd\242drdrdrdrdrdrdrd\242\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242drdrdrdrdrd\242d\242\196\216\160\181\160\181\160\181\160\181\160\181d\242d\242drdrdr\1605\1605\1605\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216drdrdr\1605\1605\1605\1605\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\1605\1605\160\181\160\181\196\216\196\216\196\216\1605\196\216\196\216\196\216\196X\196X\196X\1605\1605\1605\1605\160\181\1605\196X\196X\196X\160\181\160\181\160\181\1605\1605\1605\1605\1605\1605\1605\1605\1605\1605\196X\196X\1605\160\181\160\181\160\181\160\181\1605\1605\1605\1605\1605"
            tR0jump="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\1605\1605\1605\196X\196X\196X\196X\196X\196X\196X\196X\196Xdrd\242d\242d\242\1605\1605\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196Xd\242d\242d\242\1605\1605\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242dr\1605\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242dr\160\181\160\181\160\181dr\1605\1605\1605\160\181d\242\160\181d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181dr\1605\1605\1605\160\181d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242\160\181dr\1605\1605\1605\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\1605dr\1605\1605\1605\1605\1605d\242d\242d\242d\242d\242d\242d\242\160\181\1605\1605dr\1605\160\181\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\196\216\160\181\1605\1605\1605dr\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\196\216\196X\1605\160\181d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196X\1605\160\181d\242d\242d\242\1605\196\216\196\216\160\181\196\216\196\216d\242\196\216\196\216d\242\196\216\160\181\160\181drd\242\1605\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\1605\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\1605\1605\160\181\1605\1605\196\216\196\216\196\216\196\216\196X\196X\196Xdrdrdrdrdr"
            tR0drift="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\1605dr\1605\1605\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196X\1605drdr\1605\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605drdr\160\181\160\181\160\181\160\181\160\181\160\181d\242\160\181d\242drdrdrdrdrdrd\242d\242\160\181d\242d\242\160\181d\242d\242d\242d\242d\242d\242drdrdrdrd\242d\242\160\181d\242d\242\160\181\160\181d\242d\242\160\181\160\181d\242d\242drdrdrdrd\242d\242\160\181d\242d\242d\242d\242d\242d\242\160\181\160\181drdrdr\196X\196X\196X\196\216\196\216\196\216\160\181\160\181\160\181\196\216d\242d\242\1605\1605\1605\1605\196X\196X\196\216\196\216d\242d\242d\242\160\181\196\216\196\216\160\181\160\181\160\181\1605\1605\1605\196X\196X\196\216\160\181d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\1605\1605dr\196X\196X\196\216\196\216\196\216d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\1605\1605dr\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\1605\1605drdr\1605\1605\196X\196\216\160\181\160\181\160\181\196\216\196\216\196\216\196\216\1605\1605\1605drdr\1605\1605\1605\1605\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196X\196X\196Xdrdr\1605\160\181\1605\160\181\196\216\196\216\160\181\160\181\160\181\196\216\196X\196X\255\127\255\127\1605\1605\1605\160\181\160\181\160\181\160\181\160\181\196\216\1605\1605\196X\255\127\255\127\255\127\255\127\1605\1605\1605\1605\160\181\160\181\160\181\160\181\255\127\255\127\255\127\255\127\255\127\255\127\255\127\255\127\255\127\1605"
            tR0death="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\1605\1605\1605\1605\1605\1605\196X\196X\196X\196X\1605\1605\1605\1605\1605\1605dr\1605\1605dr\1605\196X\196X\196X\196X\196X\196X\1605dr\1605\1605\1605drdrdrdr\1605\196X\196\216\196\216\196\216\196\216\196X\1605drdrdrdr\1605drdrd\242\1605\196\216\196\216\196\216\196\216\196\216\196\216\1605d\242drdrdrdrd\242d\242d\242\160\181d\242\160\181d\242d\242\160\181d\242\160\181d\242d\242d\242drdrd\242d\242\160\181\160\181d\242\160\181d\242d\242\160\181d\242\160\181\160\181d\242d\242drdrd\242d\242\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181d\242d\242drdrdrdr\160\181\160\181\160\181\160\181d\242d\242\160\181\160\181\160\181\160\181drdrdr\1605drdr\1605\160\181d\242\160\181\160\181\160\181\160\181d\242\160\181\1605drdrdr\1605\1605\1605\196X\160\181d\242d\242d\242d\242d\242d\242\160\181\196X\1605\1605\1605\1605\1605\1605\196\216\196\216\196\216d\242d\242d\242d\242\196\216\196\216\196\216\1605\1605\1605\1605\1605\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\196\216\196\216\160\181\160\181\196\216\196\216\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\196\216d\242\196\216\196\216d\242\196\216\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\1605\1605dr\1605\1605\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\1605\1605"
            tR0climb1="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\1605\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\1605\1605\1605\1605\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242drdrdrdrdr\196X\1605\1605\160\181d\242\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdr\1605\1605\1605\160\181d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242drdr\1605\1605\1605\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181drdrdr\1605\1605\1605\1605\1605d\242d\242d\242d\242d\242d\242d\242\1605drdrdr\1605\1605\1605\1605\160\181\160\181\196\216\160\181\160\181\160\181\1605dr\1605drdrdrdr\196X\196X\196X\196\216\196\216\196\216\160\181\160\181\160\181\160\181\1605\1605drdrdrdr\196X\196X\196X\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242drdr\196X\196X\196X\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181d\242d\242d\242dr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181d\242d\242d\242dr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\1605\1605\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\1605\1605\1605\1605\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\1605\1605\1605"
            tR0climb2="\016\000\000\000\016\000\000\000\000\000\000\000 \000\000\000\016\000\001\000\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\1605\1605\1605\1605\1605\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\1605\1605\1605\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\1605\1605\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242drdrdrdrdrdr\1605\1605\160\181d\242\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242drdrdr\1605\1605\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181drdrdrdr\1605\1605\1605\1605d\242d\242d\242d\242d\242d\242d\242d\242drdrdrdr\196X\196X\196X\196X\196\216\196\216\160\181\160\181\160\181\160\181\160\181d\242d\242drdrdr\196X\196X\196X\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242drdr\196X\196X\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242drdr\196X\196X\196\216\196\216\196\216\196\216\196\216d\242\196\216\1605\1605drdr\1605\1605\1605\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\160\181\1605\1605\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\1605\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\1605\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\1605\1605"

        --BIG MARIO
            tL1idle="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181d\242d\242d\242d\242dd\242\196\216\196\216\196\216\196\216d\242\196\216\160\181\160\181\160\181\160\181d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242\000\000d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d
            tL1walk1="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000d\242\000\000\000\000\000\000\196\216\160\181\160\181\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000d\242d\242d\242\000\000\196\216\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\000\000\000\000\000\000d\242d\242d\242\160\181\196\216\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000d\242d\242d\242\196\216\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\000\000\160\181d\242\160\181\196\216\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\160\181\160\181\196\216\160\181\160\181\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\000\000\160\181d\242\160\181\196\216d\242\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242d\242\160\181\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242d\242\160\181\160\181\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d
            tL1walk2="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\196\216\196\216\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\196\216\196\216\160\181\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181\196\216\196\216\196\216\160\181\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181d\242d\242\160\181\160\181\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000\196\216d\242d\242d\242d\242\160\181\160\181\160\181\160\181\196\216\196\216\000\000\000\000\000\000\000\000\196\216\196\216d\242d\242d\242d\242\160\181\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000\000\000\196\216\196\216\196\216d\242d\242d
            tL1walk3="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\196\216\196\216\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\196\216\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\160\181\160\181\160\181\160\181\160\181\196\216\160\181\160\181\000\000\000\000d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\000\000\000\000d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\160\181\000\000\000\000d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000d\242d\242d
            tL1jump="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000d\242d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\160\181d\242d\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242\160\181\160\181d\242d\242\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\160\181\160\181\160\181\160\181d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\160\181\160\181d\242d\242d\242d\242d\242\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\160\181d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\160\181d\242d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\160\181d\242\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181\000\000\000\000\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\196\216\160\181\160\181\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\160\181\160\181\160\181\196\216\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\000\000\160\181\160\181\196\216\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\000\000\160\181\196\216\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\000\000\196\216\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181d\242d\242\160\181\160\181\000\000\000\000\000\000d\242\160\181\196\216\196\216\196\216\196\216\160\181\160\181d\242d\242d\242d\242\160\181\000\000\000\000\000\000\196\216\196\216\196\216d\242\196\216\196\216\196\216\160\181d\242d\242d\242d\242d\242\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242d\242\160\181\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\000\000d\242\160\181\160\181\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d
            tL1drift="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\160\181d\242d\242\160\181\160\181d\242d\242\000\000\000\000\196\216\196\216d\242d\242\160\181d\242d\242\160\181d\242d\242\160\181d\242d\242d\242d\242\000\000\000\000\000\000d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181d\242d\242d\242d\242\000\000d\242d\242d\242d\242d\242d\242\160\181d\242d\242d\242\196\216d\242\160\181d\242d\242d\242d\242d\242d\242\160\181d\242d\242d\242d\242d\242\196\216\196\216\160\181d\242\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181d\242d\242\160\181\160\181\196\216\196\216\160\181d\242d\242\000\000\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\196\216\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\196\216\196\216\000\000\000\000\000\000\160\181\160\181\196\216\196\216\196\216\160\181\160\181d\242d\242d\242\160\181\160\181\196\216\000\000\000\000\000\000\160\181\160\181\160\181\196\216\196\216\196\216d\242d\242d\242d\242d\242\160\181\196\216\000\000\000\000\000\000\160\181\160\181\160\181\196\216\160\181\160\181d\242d\242d\242d\242d\242\160\181\196\216\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242\160\181d\242\196\216\196\216\196\216\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242dd\242d\242d\242d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\196\216\160\181\160\181d\242d\242d\242d\242d\242d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181d\242d
            tL1climbd\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\196\216\196\216\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\196\216\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\160\181\160\181\160\181\160\181\160\181\196\216\160\181\160\181\000\000\000\000d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\000\000\000\000d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\160\181\000\000\000\000d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\000\000\000\000\000\000d\242d\242d
            tL1climbd\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000dd
            tL1growd\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242dd\242d\242\160\181\160\181\196\216d\242\196\216\196\216\196\216\196\216d\242\196\216\160\181\160\181d\242d\242d\242d\242d\242\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181d\242d\242d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242\000\000d\242\000\000\196\216\196\216\196\216\196\216\000\000\000\000\196\216\196\216\196\216\196\216\000\000d
            tL1crouchd\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\242d\242d\242\160\181d\242d\242\160\181\160\181\160\181\000\000\000\000\000\000\000\000\000\000d\242d\242d\242d\242\160\181\160\181d\242d\242\160\181d\242d\242\160\181\000\000\000\000\000\000d\242d\242d\242d\242\160\181d\242d\242d\242\160\181d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\196\216\196\216\000\000\000\000\000\000d\242d\242d\242d\242d\242d\242d\242d\242d\242\160\181\196\216\160\181\160\181\160\181\000\000\000\000\160\181\196\216\160\181\160\181d\242d\242d\242\160\181\160\181\160\181\196\216\160\181\160\181\160\181\000\000\000\000\160\181\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181d\242\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242\196\216\196\216\196\216\196\216d\242d\242d\242\160\181\160\181\160\181\196\216\160\181d\242d\242d\242d\242\196\216\196\216\196\216\196\216d\242d\242d\242d\242\160\181\196\216\196\216d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242\196\216\000\000\196\216d\242d\242\160\181\000\000\000\000\000\000\000\000\000\000\000\000\160\181d\242d\242\196\216\000\000\000\000\000\000\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181\000\000\000\000\000\000\000\000\160\181\160\181\160\181\160\181\160\181\160\181"

            tR1idle="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242dr\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242drdr\1605\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181drdr\1605\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\1605\1605\1605\1605\1605\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242\1605\1605\1605\1605\1605\1605\1605\160\181d\242d\242d\242d\242d\242\160\181\1605dr\1605\1605\1605\196X\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\1605\1605\1605\1605\196X\1605\1605\160\181\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\160\181\1605\1605\1605\1605\1605\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\1605\1605\1605\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\1605\1605\160\181\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\160\181\1605\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216d\242\196\216\196\216\196\216\196\216d\242\196\216\160\181\160\181\160\181\160\181d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242drd\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242drdrd\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242dr\1605\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\160\181\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\160\181\196X\1605\1605\1605\160\181\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\160\181\1605\1605\160\181\160\181\160\181\160\181\160\181\160\181\1605\196X\196X\1605\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196X\196X\196X\196X\160\181\160\181\160\181\160\181\160\181\160\181"
            tR1walk1="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242dr\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242drdr\1605\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181drdr\1605\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\1605\1605\1605\1605\1605\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242\1605drdr\1605\1605\1605\1605\196X\160\181\160\181\160\181d\242d\242\196Xdrdrdrdrdr\1605\1605\1605\1605\196\216\196\216\196\216\196\216\160\181\160\181\196\216\196X\1605drd\242dr\1605\1605\1605\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\196\216\1605d\242d\242d\242\1605\1605\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\196\216\160\181d\242d\242d\242\1605\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\196\216d\242d\242d\242\1605\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\196\216\160\181d\242\160\181\1605\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\160\181\160\181\196\216\160\181\160\181\1605\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216d\242\196\216\160\181d\242\160\181\1605\1605\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\1605\1605\1605d\242d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\1605\1605d\242d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\1605\160\181d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\1605\160\181\160\181drd\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\1605dr
            tR1walk2="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242dr\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242drdr\1605\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181drdr\1605\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\1605\1605dr\1605\1605\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242\1605\1605\1605dr\1605\1605\1605\196\216\196\216\196\216\196\216d\242d\242\1605drdr\1605\1605\1605dr\1605\1605\160\181\196\216\160\181\160\181\196\216\196\216\160\181\160\181\1605dr\1605\1605\1605dr\1605\160\181\196\216\160\181\160\181\160\181\160\181\196\216\196\216\160\181\1605\1605\1605\1605\1605dr\1605\160\181\196\216\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\1605\1605\1605\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\196\216\196\216\196\216\160\181\1605\1605\1605\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\160\181d\242d\242\160\181\1605\1605\1605\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181d\242d\242d\242d\242\196X\196X\196X\1605\196X\196X\196\216\196\216\160\181\160\181\160\181\160\181d\242d\242d\242d\242\196\216\196X\196X\196X\1605\196X\196\216\196\216\196\216\160\181\160\181\160\181d\242d\242d\242d\242\196\216\196\216\196X\196X\1605\196X\196\216\196\216\196\216\196\216\160\181\160\181d\242d\242d
            tR1walk3="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\1605\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\1605\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242dr\196X\196Xdr\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\196X\196X\196Xdrdr\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216drdr\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242drdr\1605\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242\1605\1605\160\181\160\181d\242d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242d\242\1605\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181dr\1605\1605\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\1605\1605\1605\1605\1605\1605\160\181d\242d\242d\242d\242d\242d\242d\242d\242\1605\1605\1605\1605\1605\1605\160\181\196\216\196\216\196\216d\242d\242d\242drdrdr\1605\1605\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\196\216\160\181\1605\196Xdrdrdrdr\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\196Xdrdrdrdr\1605\1605\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\196\216\196\216d\242d\242drdr\1605\1605\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242\1605\1605\160\181\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242\1605\1605\1605\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242\196X\196X\196X\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242\1605\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\196\216drdrdr\1605\1605\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196Xdrdr
            tR1jump="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196Xdrd\242d\242d\242drdr\196X\196X\196X\196X\196X\196X\196X\196X\196X\196Xd\242d\242\160\181d\242d\242\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216d\242d\242\160\181\160\181d\242\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242d\242\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181dr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181dr\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242\160\181\160\181\160\181\160\181dr\1605\160\181d\242d\242\160\181d\242d\242\160\181d\242d\242d\242d\242d\242\160\181\160\181dr\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242\160\181\1605\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242d\242\160\181\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\160\181\1605\1605\160\181\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181d\242\160\181\1605\1605\1605\1605\160\181\160\181d\242d\242d\242d\242d\242d\242d\242dd\242d\242\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\196\216\196X\196X\1605\160\181d\242d\242d\242d\242\160\181\160\181\196\216\196\216\196\216\196\216\160\181d\242drdr\1605d\242d\242d\242d\242d\242\160\181\196\216\196\216\196\216d\242\196\216\196\216\196\216\196X\196X\1605d\242d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\1605\1605d\242drd\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\1605\160\181drd\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\1605\160\181\160\181\1605drdrdrdrdrdr\1605\1605\1605\196X\196X\196X\196X\196X\196X\196X\196X\196Xdrdrdrdr"
            tR1drift="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\1605\1605\1605\1605\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\1605\1605\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242drdrdr\1605\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242\196X\196X\196X\196Xdrd\242d\242\160\181\160\181d\242d\242\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196X\196Xd\242d\242d\242d\242\160\181d\242d\242\160\181d\242d\242\160\181d\242d\242\196\216\196\216\196Xd\242d\242d\242d\242\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242drdrdrd\242d\242\160\181d\242\196\216d\242d\242d\242\160\181d\242d\242d\242d\242d\242d\242drd\242\160\181d\242\160\181\196\216\196\216d\242d\242d\242d\242d\242\160\181d\242d\242d\242d\242d\242d\242\160\181\196\216\196\216\160\181\160\181d\242d\242\160\181\160\181\160\181\160\181d\242d\242d\242drdr\196X\196\216\160\181\160\181\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181drdr\196X\196\216\196\216\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242d\242\1605\1605\196X\196X\196\216\160\181\160\181d\242d\242d\242\160\181\160\181\196\216\196\216\196\216\160\181\160\181\1605\196X\196X\196\216\160\181d\242d\242d\242d\242d\242\196\216\196\216\196\216\160\181\160\181\160\181\1605\196X\196X\196\216\160\181d\242d\242d\242d\242d\242\160\181\160\181\196\216\160\181\160\181\160\181\1605\196X\196X\196X\196Xd\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196X\196X\196\216\196\216\196\216d\242\160\181d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\160\181dr\196X\196\216\196\216\196\216\196\216d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181dr\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181dr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181drdr\1605\196X\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\1605dr\1605\1605\1605\1605\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216drdr\1605\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216dr\1605\1605\160\181d\242d\242d\242d\242\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196Xdr\1605\1605\160\181d\242d\242d\242d\242d\242d\242\160\181\160\181\196\216\196X\196X\196X\1605\1605\1605\1605\196X\196\216\196\216\196\216\196\216d\242d
            tR1climbdr\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242dr\196X\196X\196X\196Xdr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\196X\196X\196X\196X\196Xdr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196Xdr\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242drdr\1605\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181drdr\1605\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\1605\1605\1605\1605\1605\1605\160\181d\242d\242d\242d\242d\242d\242d\242d\242\1605\1605\1605\1605\1605\1605\160\181\196\216\196\216\196\216d\242d\242d\242drdrdr\1605\1605\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\196\216\160\181\1605\196Xdrdrdrdrdr\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\196Xdrdrdrdrdr\1605\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\196\216\196\216d\242d\242drdrdr\1605\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242dr\1605\160\181\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242d\242dr\1605\1605\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242dr\196X\196X\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242dr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\196\216drdrdrdr
            tR1climb2="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242dr\196X\196X\196X\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\196X\196X\196X\196X\196Xdr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196Xdr\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242drdr\1605\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181drdr\1605\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181d\242d\242d\242d\242dr\1605\1605\1605\1605\160\181d\242d\242\160\181\160\181\160\181d\242d\242d\242d\242drdr\1605\1605\1605\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181d\242d\242drdr\1605\1605\1605\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181d\242drdrdr\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\160\181\160\181\1605drdrdrdr\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\160\181\196\216\160\181\1605\1605\1605\1605\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\196\216\196\216\160\181\1605\1605\1605\1605\1605\1605\1605\1605\196\216\196\216\160\181\160\181\196\216\196\216\196\216\160\181\160\181\1605\1605\1605\1605\1605\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\1605\1605\1605\1605dr\196X\196X\196\216\196\216\196\216\196\216\196\216d\242\196\216\196\216\196\216\196X\196X\1605\1605dr\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\1605\1605dr
            tR1growdrdr\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\196X\1605drdr\196X\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196X\196X\196X\196X\1605drdr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242dr\196X\196X\196X\1605dr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\196X\196X\196X\196X\196Xdr\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\196X\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242drdrdrdr\1605\1605\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242drdr\1605\1605\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242d\242dr\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181drdr\1605\160\181\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\1605\1605\1605\1605\1605\160\181\160\181d\242d\242d\242d\242d\242d\242d\242d\242\1605\1605\1605\1605\1605\1605\1605\196\216d\242d\242d\242d\242d\242\196X\1605dr\1605\1605\1605dr\1605\1605\1605\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\1605\1605\1605drdr\1605\1605\160\181\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\160\181\1605\1605drdr\1605\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\1605drdr\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181drd\242d\242\160\181\160\181\196\216d\242\196\216\196\216\196\216\196\216d\242\196\216\160\181\160\181d\242d\242d\242d\242d\242\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181d\242d\242d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242drd\242\196X\196\216\196\216\196\216\196\216\196X\196X\196\216\196\216\196\216\196\216\196Xd\242drdrdr\196\216\196\216\196\216\196\216\196X\196X\196X\196X\196\216\196\216\196\216\196\216dr\1605\1605\1605\160\181\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\160\181\1605\1605\1605\160\181\160\181\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\160\181\160\181\1605"
            tR1crouch="\016\000\000\000 \000\000\000\000\000\000\000 \000\000\000\016\000\001\000drdrdrdrdrdrdrdr\196X\196X\196X\196X\196X\196X\196X\196Xdrdrdrdrdrdrdrdr\196X\196X\196X\196X\196X\196X\196X\196Xdrdrdrdrdrdrdr\196X\196X\196X\196X\196X\196X\196X\196X\196Xdrdrdrdrdrdrdrd\242dr\196X\196X\196X\1605\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242\196X\196X\196X\196X\1605\196X\196X\196X\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196X\1605\1605\1605\1605\160\181\160\181\160\181d\242d\242\160\181d\242d\242d\242drdrdr\1605\1605\1605\160\181d\242d\242\160\181d\242d\242\160\181\160\181d\242d\242d\242d\242dr\1605\1605\160\181\160\181d\242d\242d\242\160\181d\242d\242d\242\160\181d\242d\242d\242d\242\1605\1605\160\181\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\160\181dr\1605\1605\196\216\196\216\160\181d\242d\242d\242d\242d\242\160\181\160\181\160\181\160\181\160\181\1605\1605\160\181\160\181\160\181\196\216\160\181d\242d\242d\242d\242d\242d\242d\242d\242d\242\1605\1605\160\181\160\181\160\181\196\216\160\181\160\181\160\181d\242d\242d\242\160\181\160\181\196\216\160\181dr\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\160\181\1605\160\181\160\181\160\181\160\181\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\196\216d\242\160\181\160\181\160\181\160\181\160\181\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181\196\216\196\216\196\216\196\216\196\216\196\216\160\181\160\181\160\181\160\181\160\181\160\181\160\181\160\181d\242d\242d\242\196\216\196\216\196\216\196\216d\242d\242d\242\160\181\160\181\160\181\196\216\160\181d\242d\242d\242d\242\196\216\196\216\196\216\196\216d\242d\242d\242d\242\160\181\196\216\196\216d\242d\242d\242d\242\196\216\196\216\196\216\196\216\196\216\196\216d\242d\242d\242d\242\196\216\196X\196\216d\242d\242\160\181\1605\196X\196X\196X\196X\1605\160\181d\242d\242\196\216\196X\1605\1605\160\181\160\181\160\181\160\181\1605\196X\196X\1605\160\181\160\181\160\181\160\181\1605\1605\160\181\160\181\160\181\160\181\160\181\160\181\1605\1605\1605\1605\160\181\160\181\160\181\160\181\160\181\160\181"
    --MARIO INITIALISATION
        local loadFrames={}
        loadFrames[0]={"idle","walk1","walk2","walk3","jump","drift","death","climb1","climb2"} --small
        loadFrames[1]={"idle","walk1","walk2","walk3","jump","drift","grow","crouch","climb1","climb2"} --super
        loadFrames[2]={"idle","walk1","walk2","walk3","jump","drift","grow","crouch","climb1","climb2"} --fire
        --print(loadFrames[0][1])

        local starCycleFrames={}
        starCycleFrames[0]={{"\196\216","\000\128"},{"\160\181","\032\205"},{"\100\246","\056\255"}} -- overalls , shoes , face
        starCycleFrames[1]={{"d\242","\255\255"},{"\196\216","\000\158"},{"\160\181","\100\242"}} -- face , overalls , shoes
        starCycleFrames[2]={{"d\242","\255\255"},{"\160\181","\100\242"}} -- face,shoes
        --print(#starCycleFrames[0])


        for i=0,1 do --Left,Right  - load all mario sprites and recolour
            if i==0 then i="L" else i="R" end
            for i2=0,1 do --small,big
                for i3=1,#loadFrames[i2] do --loadFrames index
                    local frameForLoad=loadFrames[i2][i3]
                    _G[i..i2..frameForLoad]=image.new(_G["t"..i..i2..frameForLoad])
                    --print("loaded","t"..i..i2..frameForLoad,"to var",i..i2..frameForLoad)
                end
            end
            for i3=1,#loadFrames[2] do --fire mario
                local frameForLoad=loadFrames[2][i3]
                local textureString=_G["t"..i.."1"..frameForLoad]
                textureString=string.gsub(textureString,"\196\216","\084\251") --overalls,hat
                textureString=string.gsub(textureString,"\160\181","\196\216") --shoes,moustache,shirt
                _G[i.."2"..frameForLoad]=image.new(textureString)
                --print("loaded","t"..i.."2"..frameForLoad,"to var",i.."2"..frameForLoad)
            end
            for i4=0,2 do --star0,star1,star2 for big mario
                for i3=1,#loadFrames[2] do
                    local frameForLoad=loadFrames[2][i3]
                    local textureString=_G["t"..i.."1"..frameForLoad]
                    for i5=1,#starCycleFrames[i4] do
                        textureString=string.gsub(textureString,starCycleFrames[i4][i5][1],starCycleFrames[i4][i5][2]) end
                    _G[i.."2"..frameForLoad.."star"..i4]=image.new(textureString)
                    --print("loaded","t"..i.."1"..frameForLoad,"to var",i.."2"..frameForLoad.."star"..i4)
                end
            end
        end

--------------------------
----INITIALISING VARS-----
--------------------------
    function initialiseVARS()
        mousePos={}
        mousePos.x=0
        mousePos.y=0
        framesPassed=0
        blockSelectionTEMP=1
        blockSelectionListTEMP={0,1,2,3,5,6,99,"mushroom","goomba","koopa_G","koopa_R","shell_G","shell_R"}
        debugBoxes={}
        blockIndex={}

        if platform.hw()==7 then
            studentSoftware=true
            flashingDelay=1
        else
            studentSoftware=false
            flashingDelay=2
        end

        input=class()
        input.up=0
        input.down=0
        input.left=0
        input.right=0

        arrowUpInput=0
        arrowDownInput=0
        arrowLeftInput=0
        arrowRightInput=0
        
        arrowUpDelay=0
        arrowDownDelay=0
        arrowLeftDelay=0
        arrowRightDelay=0

        arrowLeftStor=0
        arrowRightStor=0
        arrowUpStor=0
        arrowDownStor=0
    end
    initialiseVARS()
--------------------------
----GENERAL FUNCTIONS-----
--------------------------
    function screenRefresh()
        return platform.window:invalidate()
    end

    function pww()
        return platform.window:width()
    end

    function pwh()
        return platform.window:height()
    end

    function drawPoint(myGC,vx, y)
        myGC:fillRect(x, y, 1, 1)
    end

    function drawCenteredString(myGC,str)
        myGC:drawString(str, (pww() - myGC:getStringWidth(str)) / 2, pwh() / 2, "middle")
    end
                            
    function drawXCenteredString(myGC,str,y)
        myGC:drawString(str, (pww() - myGC:getStringWidth(str)) / 2, y, "top")
    end

    function inRange(i, min, max)
        return i and (i >= min and i <= max)
    end

    function inRect(p, r)    --p=point={x,y}, r=rectangle={x,y,w,h}
        return (inRange(p[1],r[1],r[1]+r[3]) and inRange(p[2],r[2],r[2]+r[4]))
    end

    -- Collision detection function; --credit to Love2D
    function checkCollision(x1,y1,w1,h1, x2,y2,w2,h2) -- Returns true if two boxes overlap, false if they don't;
    return x1 < x2+w2 and
            x2 < x1+w1 and
            y1 < y2+h2 and
            y2 < y1+h1
    end

    function drawRectDotted(gc,x,y,w,h,thickness)
        if thickness==nil then thickness="thin" end
        gc:setPen("thin","dotted")
        gc:drawRect(x,y,w,h)
        gc:setPen("thin","smooth")
    end

    function drawRectDashed(gc,x,y,w,h,thickness)
        if thickness==nil then thickness="thin" end
        gc:setPen("thin","dashed")
        gc:drawRect(x,y,w,h)
        gc:setPen("thin","smooth")
    end

    function pol2binary(num)
        return ((num/math.abs(num))+1)/2
    end

--------------------------
---------EVENTS-----------
--------------------------
    function on.enterKey()
        timer.start(0.01)
    end

    function on.charIn(chr) --temporary dev features
        if chr=="1" then
            mario:powerUpMario()
        elseif chr=="2" then
            arrowDownInput=arrowDownInput+1
        elseif chr=="p" then
            playStage.pause = not playStage.pause
        elseif chr=="3" then
            mario.velocity.x=-7
            arrowUpInput=arrowUpInput+1
        elseif chr=="4" then
            arrowLeftInput=arrowLeftInput+1
        elseif chr=="6" then
            arrowRightInput=arrowRightInput+1
        elseif chr=="5" or chr==" " then
            arrowUpInput=arrowUpInput+1
        elseif chr=="7" then
            playStage.currentLevel["x"..pixel2plot(mario.pos.x-playStage.cameraOffset+8,mario.pos.y+8+16)[1].."y"..pixel2plot(mario.pos.x-playStage.cameraOffset+8,mario.pos.y+8+16)[2]]=1
        elseif chr=="8" then
            mario.pos.x=mario.pos.x-1
        elseif chr=="9" then
            mario.pos.x=mario.pos.x+1
        elseif chr=="0" then
            mario:powerDownMario()
        elseif chr=="r" then playStage:reset()
        elseif chr=="f" then frameByFrame=not frameByFrame debug=tostring(frameByFrame)
        elseif chr=="t" then mario.pos.x=720
        elseif chr=="c" then
            print(level2string(playStage.permLevel))
        elseif chr=="k" then
            blockSelectionTEMP=blockSelectionTEMP+1
        elseif chr=="j" then
            blockSelectionTEMP=blockSelectionTEMP-1
        elseif chr=="d" then 
            objBrickParticleGlobalAnimIndex=0
            objAPI:createObj("brick_piece",64,64,false,4)
            objAPI:createObj("brick_piece",64,64+8,false,3)
            objAPI:createObj("brick_piece",64+8,64,false,-4)
            objAPI:createObj("brick_piece",64+8,64+8,false,-3)
        end
    end

    function on.timer()
        if not frameByFrame then platform.window:invalidate() end --refreshes screen
    end

    function on.escapeKey()
        playStage:generate()
        mario:resetPos()
    end

    function on.copy()
        clipboard.setText(level2string(playStage.permLevel))
    end

    function on.paste()
        playStage:generate()
        mario:resetPos()
        playStage.permLevel=string2level(clipboard.getText)
    end

    function on.arrowRight()
        arrowRightInput=arrowRightInput+1 end
    function on.arrowLeft()
        arrowLeftInput=arrowLeftInput+1 end
    function on.arrowUp()
        arrowUpInput=arrowUpInput+1 end
    function on.arrowDown()
        arrowDownInput=arrowDownInput+1 end

    function on.mouseDown(x,y)
        local placeXY=pixel2plot(x,y-8)
        playStage.currentLevel["x"..placeXY[1].."y"..placeXY[2]]=blockSelectionListTEMP[(blockSelectionTEMP%(#blockSelectionListTEMP))+1]
        playStage.permLevel["x"..placeXY[1].."y"..placeXY[2]]=blockSelectionListTEMP[(blockSelectionTEMP%(#blockSelectionListTEMP))+1]
    end
    function on.rightMouseDown(x,y)
        local placeXY=pixel2plot(mousePos.x,mousePos.y-8)
        playStage.currentLevel["x"..placeXY[1].."y"..placeXY[2]]=0
        playStage.permLevel["x"..placeXY[1].."y"..placeXY[2]]=0
    end
    function on.grabDown(x,y)
        on.rightMouseDown()
    end
    function on.mouseMove(x,y)
        mousePos.x=x
        mousePos.y=y
    end

---------------------------
-----PROGRAM FUNCTIONS-----
---------------------------

    function isInteger(str)

        return not (str == "" or str:find("%D"))
    
    end

    function addZeros(input, length)
        input=tostring(input)
        local output = string.rep('0', length-#input)..input
        return output
    end
    
    function toBinary(num,bits)
        bits = bits or math.max(1, select(2, math.frexp(num)))
        local t = {}    
        for b = bits, 1, -1 do
            t[b] = math.fmod(num, 2)
            num = math.floor((num - t[b]) / 2)
        end
        return table.concat(t)
    end
    
    function rgb2ti(R,G,B)
        R=toBinary(math.floor(R/8),5)
        G=toBinary(math.floor(G/8),5)
        B=toBinary(math.floor(B/8),5)
        local data="1"..R..G..B
        data={string.sub(data, 1, 8),string.sub(data, 9, 16)}
        return ("\\"..addZeros(tostring(tonumber(data[2],2)),3).."\\"..addZeros(tostring(tonumber(data[1],2)),3))
    end
    
    function ti2rgb(data) --will not return fully accurate values due to compressing values to make it TI-image compatible
        data={string.sub(data,2,4),string.sub(data,6,8)}
        data=(toBinary(tonumber(data[2]),8))..(toBinary(tonumber(data[1]),8))
        local R=((tonumber(string.sub(data,2,6),2)+1)*8)-1
        local G=((tonumber(string.sub(data,7,11),2)+1)*8)-1
        local B=((tonumber(string.sub(data,12,16),2)+1)*8)-1
        return{R,G,B}
    end

    function getID(searchX,searchY) --returns ID when given *CO-ORDINATES*
        local ID=playStage.currentLevel["x"..searchX.."y"..searchY]
        if ID==nil then ID=-1 end --ID doesnt exist (likely out of bounds)
        return ID
    end

    function pixel2plot(x,y,Global) --returns co-ordinate of block from a screen pixel position
        local plotX
        if Global==true then --doesnt take camera offset into account if true
            plotX=math.ceil((x)/16)
        else -- relative to the camera (DEFAULT)
            plotX=math.ceil((x+playStage.cameraOffset)/16)
        end
        local plotY=math.ceil((212-y)/16)
        return {plotX,plotY}
    end

    function plot2pixel(plotX,plotY,Global)
        plotX=plotX-1
        local x
        if Global==true then
            x=plotX*16-playStage.cameraOffset
        else
            x=(plotX*16) end
        local y=212-(plotY*16)
        return {x,y}
    end

    function pixel2ID(x,y,Global) --function to remove redundant args, returns ID of pixel on screen
        local plots = pixel2plot(x,y,Global)
        local plotX=plots[1]
        local plotY=plots[2]
        local ID=getID(plotX,plotY)
        if type(ID)=='number' then --for random generation
            if ID<0 then ID=0 end
        end
        return ID
    end

    function pixel2solid(x,y,Global) --semi useless function to remove redundant args, returns state of solid
        local ID = pixel2ID(x,y,Global)
        if type(ID)=='number' then
            if ID<0 then ID=0 end
            return blockIndex[ID].solid
        end
    end

    function pixel2bumpable(x,y,Global) --semi useless function to remove redundant args, returns state of bumpable
        local ID = pixel2ID(x,y,Global)
        if type(ID)=='number' then
            if ID<0 then ID=0 end
            return blockIndex[ID].bumpable[1]
        end
    end
    
    function pixel2semisolid(x,y,Global) --semi useless function to remove redundant args, returns state of bumpable
        local ID = pixel2ID(x,y,Global)
        if type(ID)=='number' then
            if ID<0 then ID=0 end
            return blockIndex[ID].semisolid
        end
    end

    --[[function pixel2exactPixel(x,y)
        local v={pixel2plot(xPos-playStage.cameraOffset,yPos+(1))[1],pixel2plot(xPos-playStage.cameraOffset,yPos+(1))[2]}
        v = plot2pixel(v[1],v[2],true)[2]+16
        return {v[1],v[2]-12}
    end]]

    function level2string(levelData)
        local STRING="<"..levelData.END.."-"..levelData.version..">" --header: end of stage, version of string conversion (for compatibility)
        for x=1,levelData.END do -- x axis, left to right, horizontally per row
            for y=1,13 do -- y axis, bottom to top, in a column
                STRING=STRING..","..(levelData["x"..x.."y"..y])
            end
        end
        return STRING
    end

    function string2level(STRING)
        local function splitByChar(input,char)
            local output={}
            for str in string.gmatch(input, "([^"..char.."]+)") do
                table.insert(output, str)
            end return output
        end
        local levelDataTable={}
        local levelData={}
        levelDataTable=splitByChar(STRING,",")
        local HEADER=string.sub(levelDataTable[1],2,(#levelDataTable[1]-1))
        HEADER=splitByChar(HEADER,"-")
        levelData.END=HEADER[1]
        levelData.version=HEADER[2]
        local tablePos=1
        for x=1,levelData.END do
            for y=1,13 do
                tablePos=tablePos+1
                if isInteger(levelDataTable[tablePos]) then
                    levelData["x"..x.."y"..y]=tonumber(levelDataTable[tablePos])
                else levelData["x"..x.."y"..y]=tostring(levelDataTable[tablePos]) end
            end
        end
        return (levelData)
    end

    function copyLevel(levelData)
        return string2level(level2string(levelData))
    end
--------------------------
-------BLOCK INDEX--------
--------------------------
addBlock=class()
    function addBlock:init(id,name,solid,textureID) --textureID can also be a list, eg {1,1,1,1,2,3} for an animation sequence
        lastAdded=id
        --print(id,name,solid,#textureID)
        self.id=id
        blockIndex[self.id]={["solid"]=solid,["name"]=name,["texture"]=textureID}
        --set default
        if blockIndex[self.id]["invisible"]== nil then      blockIndex[self.id]["invisible"]=false end    --doesnt render
        if blockIndex[self.id]["semisolid"]== nil then      blockIndex[self.id]["semisolid"]=false end  --semisolid (mario must be above the top eg mushrooms)
        if blockIndex[self.id]["containing"]== nil then     blockIndex[self.id]["containing"]=false end   --contains coins, powerup, vine or star
        if blockIndex[self.id]["bumpable"]== nil then       blockIndex[self.id]["bumpable"]={false} end   --ie moves when hit (bricks, question marks), second arg for texture to display during animation, third arg for what to replace it with once animation finished
        if blockIndex[self.id]["breakable"]== nil then      blockIndex[self.id]["breakable"]=false end    --creates brick particles and disappears if super or fire mario
        --if blockIndex[self.id]["inFront"]== nil then        blockIndex[self.id]["inFront"]=false end    --drawn after mario and objects, useful for pipes and castle black void
    end

    function addBlock:attribute(property,val) --eg semisolid, containing, bumpable,
        blockIndex[lastAdded][property]=val
    end

    --addBlock(id,name,solid,textureID)
    addBlock(0,"Air",false,{nil})
    addBlock(1,"Ground",true,{"texture_Ground"})
    addBlock(2,"MysteryBoxMushroom",true,{"texture_MysteryBox0","texture_MysteryBox0","texture_MysteryBox0","texture_MysteryBox1","texture_MysteryBox2","texture_MysteryBox1"})
        addBlock:attribute("containing","mushroom")
        addBlock:attribute("bumpable",{true,"EmptyBlock",5})
    addBlock(3,"Brick",true,{"texture_Brick"})
        addBlock:attribute("breakable",true)
        addBlock:attribute("bumpable",{true,"Brick",3})
    addBlock(5,"EmptyBlock",true,{"texture_EmptyBlock"})
    addBlock(6,"Bridge",false,{"texture_Bridge"})
        addBlock:attribute("semisolid",true)
    addBlock(99,"Barrier",true,{nil})

--------------------------
--------OBJECT API--------
--------------------------
objAPI=class()

    function objAPI:moveCheckX(xPos,yPos,xVel,ignoreEdge) --CHECKS FOR INTERFERENCE IN X AXIS returns true if nothing in the way
        --X AXIS HANDLING
        if ((xPos+xVel<0) or (xPos+xVel>(playStage.currentLevel.END*16))) and not ignoreEdge then --edge of screen LEFT
            return false
        else --no edges of screen
            xPos=xPos+xVel --temp set to new pos
        end
        if pixel2solid(xPos+(xVel/16)-playStage.cameraOffset,yPos) then --check if new x pos in a wall
            return false
        else return true
        end
    end

    function objAPI:moveCheckY(xPos,yPos,yVel,notBump) --CHECKS FOR INTERFERENCE IN Y AXIS returns true if nothing in the way returns false if wall
        yPos=math.floor(yPos)
        --Y AXIS HANDLING
        if yVel==0 and notBump and pixel2semisolid(xPos-playStage.cameraOffset,yPos+1) then --this could be optimised but i currently have no clue how, will come back to this when im less stupid
            if (math.floor(yPos-4)%16)==0 then --confirm standing at the y level of the top of a block, i did so much bullshit before finally realising i could do this
                return false
            else return true end
        elseif pixel2solid(xPos-playStage.cameraOffset,yPos+(yVel)) then --check if new y pos in a wall
            return false
        elseif pixel2semisolid(xPos-playStage.cameraOffset,yPos+(yVel)) and not ((yVel<0.1)) and notBump then
            local v={pixel2plot(xPos-playStage.cameraOffset,yPos+(yVel))[2],pixel2plot(xPos-playStage.cameraOffset,yPos+1)[2]}
            if (math.floor(yPos+yVel-4)%16)==0 then
                return false
            elseif (v[1]~=v[2]) then
                return false
            else return true end
        else return true
        end
    end

    function objAPI:gravityCheck(xPos,yPos,yVel,turnAround,dir) --CHECKS IF STANDING ON BLOCK returns true if gravity applies
        if turnAround=="koopa_R" then turnAround=true end
        local bottomLeft = objAPI:moveCheckY(xPos+2,yPos+16,yVel,true)
        local bottomRight = objAPI:moveCheckY(xPos+13,yPos+16,yVel,true)
        if turnAround~=true then
            if (bottomLeft and bottomRight) then
                return true
            else 
                return false
            end
        else
            if ((not bottomLeft and bottomRight) and dir==1) or ((bottomLeft and not bottomRight) and dir==-1) then
                return ("turn")
            elseif (bottomLeft and bottomRight) then
                return true
            else
                return false end
        end
    end

    function objAPI:aggregateCheckX(xPos,yPos,xVel,powerStatus,ignoreEdge) --checks points at head, feet, left, right
        if powerStatus==nil then powerStatus=0 end
        local topLeft=objAPI:moveCheckX(xPos+2,yPos+1,xVel,ignoreEdge) --more leniency
        local topRight=objAPI:moveCheckX(xPos+14,yPos+1,xVel,ignoreEdge) --more leniency, 14 pixel search
        local bottomLeft=objAPI:moveCheckX(xPos+2,yPos+15,xVel,ignoreEdge)
        local bottomRight=objAPI:moveCheckX(xPos+14,yPos+15,xVel,ignoreEdge)
        local powerLeft
        local powerRight    --------------------------------------------------------------------------------------------------------------o_ <--powerLeft/Right, big mario calculated after
        if powerStatus~=0 and not mario.crouch then powerLeft=objAPI:moveCheckX(xPos+2,yPos-16+1,xVel) else powerLeft=true end -----------O                   (offset also needed when rendering)
        if powerStatus~=0 and not mario.crouch then powerRight=objAPI:moveCheckX(xPos+13,yPos-16+1,xVel) else powerRight=true end--------@=@ <-- topLeft/Right, position always set as small mario height
        if topLeft and topRight and bottomLeft and bottomRight and powerLeft and powerRight then return true    -------------------------/\  <--bottomLeft/Right
        else return false
        end
    end

    function objAPI:bumpCheck(xPos,yPos,yVel,powerStatus) --CHECKS IF ABOUT TO COLLIDE WITH BLOCK returns true if bump applies
        yVel=-yVel
        if powerStatus==nil then powerStatus=0 end
        local topLeft = objAPI:moveCheckY(xPos+2,yPos,yVel,false) --easier to make tight jumps (has to be same as objAPI:gravityCheck or can climb walls) 
        local topRight = objAPI:moveCheckY(xPos+13,yPos,yVel,false)
        local powerLeft
        local powerRight
        if powerStatus>0 and not mario.crouch then powerLeft=objAPI:moveCheckY(xPos+2,yPos-15,16*yVel,false) powerRight=objAPI:moveCheckY(xPos+13,yPos-15,yVel,false)
        else powerLeft=true powerRight=true end
        if topLeft and topRight and powerLeft and powerRight then
            return true
        else return false
        end
    end

    function objAPI:createObj(TYPE,posX,posY,despawnable,arg1) --eg
        local classID=TYPE..#playStage.entityListInner+#playStage.entityListParticle+#playStage.entityListOuter+1+framesPassed.."r"..math.random(0,200) --assign random ID
        local spawned=true

            if TYPE=="mushroom"                     then _G[tostring(classID)]=objPowerUp(classID,posX,posY,TYPE,despawnable)   LEVEL="entityListInner"
        elseif TYPE=="goomba"                       then _G[tostring(classID)]=objGoomba(classID,posX,posY,TYPE)                LEVEL="entityListInner"
        elseif TYPE=="koopa_G" or TYPE=="koopa_R"   then _G[tostring(classID)]=objKoopa(classID,posX,posY,TYPE)                 LEVEL="entityListInner"
        elseif TYPE=="shell_G" or TYPE=="shell_R"   then _G[tostring(classID)]=objShell(classID,posX,posY,TYPE,arg1)            LEVEL="entityListInner" --arg1=initial velocity
        elseif TYPE=="brick_piece"                  then _G[tostring(classID)]=objBrickParticle(classID,posX,posY,arg1)         LEVEL="entityListParticle" --arg1=thrust
        
        else spawned=false end --prevent spawning nothing
        --print(classID,posX,posY,TYPE,fromBlock)
        if spawned then table.insert(playStage[LEVEL],tostring(classID)) end
    end

    function objAPI:destroy(objectName,LEVEL) --add to cleanup waitlist
        table.insert(cleanupListDestroy,{objectName,LEVEL})
    end

    function objAPI:transferLayer(objectName,LEVEL,newLEVEL) --add to cleanup waitlist
        table.insert(cleanupListTransfer,{objectName,LEVEL,newLEVEL})
    end

    function objAPI:sendToFront(objectName,LEVEL) --removes from layer and reinserts at the top
        table.insert(cleanupListTransfer,{objectName,LEVEL,LEVEL})
    end

    function objAPI:cleanup()
        for i=1,#cleanupListDestroy do --remove entity from list and clear all stored vars
            local LEVEL=cleanupListDestroy[i][2]
            local objectName=cleanupListDestroy[i][1]
            for i2=1,#playStage[LEVEL] do
                if tostring(playStage[LEVEL][i2])==objectName then
                    table.remove(playStage[LEVEL],i2)
                    _G[objectName]=nil
                    break
        end end end
        for i=1,#cleanupListTransfer do
            local LEVEL=cleanupListTransfer[i][2]
            local newLEVEL=cleanupListTransfer[i][3]
            local objectName=cleanupListTransfer[i][1]
            for i2=1,#playStage[LEVEL] do
                if tostring(playStage[LEVEL][i2])==objectName then
                    table.remove(playStage[LEVEL],i2)
                    table.insert(playStage[newLEVEL],tostring(objectName))
                    break
        end end end
    end

    function objAPI:handleBumpedBlock(xLOC,yLOC,shell)
        local ID=getID(xLOC,yLOC)
        local pixelXY=plot2pixel(xLOC,yLOC,false)
        if blockIndex[ID].containing~=nil and blockIndex[ID].containing~=false then
            objAPI:createObj(blockIndex[ID].containing,pixelXY[1],pixelXY[2],true) --(TYPE,posX,posY,fromBlock) objAPI:createObj(blockID,(i2-1)*16,212-16*(i),0)
        end
        if blockIndex[ID].breakable==false or (mario.power==0 and not shell) then
            objBumpedBlock:create(xLOC,yLOC,blockIndex[ID].bumpable[2],blockIndex[ID].bumpable[3],false)
        else --smash the block
            playStage.currentLevel["x"..xLOC.."y"..yLOC]=0
            objBrickParticleGlobalAnimIndex=0
            objAPI:createObj("brick_piece",pixelXY[1],pixelXY[2],false,-4) --top left
            objAPI:createObj("brick_piece",pixelXY[1]+8,pixelXY[2],false,4) --top right
            objAPI:createObj("brick_piece",pixelXY[1]+8,pixelXY[2]+8,false,3) --bottom right
            objAPI:createObj("brick_piece",pixelXY[1],pixelXY[2]+8,false,-3) --bottom left
        end
        bumpedBoundary={pixelXY[1],pixelXY[2],16,2}
    end

    function objAPI:updateShellBoundaries(classID,x,y)
        for i=1,#playStage.shellBoundaries do --search for entry
            if tostring(playStage.shellBoundaries[i][1])==tostring(classID) then
                playStage.shellBoundaries[i]={classID,x,y,16,16} return --entry exists
            end
        end
        table.insert(playStage.shellBoundaries,{classID,x,y,16,16}) --if entry does not exist
    end

    function objAPI:removeShellBoundaries(classID)
        for i=1,#playStage.shellBoundaries do --search for entry
            if playStage.shellBoundaries[i]~=nil then
                if tostring(playStage.shellBoundaries[i][1])==tostring(classID) then
                    table.remove(playStage.shellBoundaries,i) return --entry exists
                end
            end
        end
    end

    function objAPI:checkShellCollision(classID,x,y,w,h)
        classID=tostring(classID)
        for i=1,#playStage.shellBoundaries do --search for entry
            if tostring(playStage.shellBoundaries[i][1])~=classID and (checkCollision(playStage.shellBoundaries[i][2],playStage.shellBoundaries[i][3],playStage.shellBoundaries[i][4],playStage.shellBoundaries[i][5],x+2,y+2,w-4,h-4)) then
                return true
            end
        end
        return false
    end

---------------------------
---MARIO CLASS FUNCTIONS---
---------------------------
mario=class()

    function mario:init()
        mario.velocity={}
        mario.pos={}
        self:resetPos()
    end

    function mario:resetPos() --default config
        mario.powerUp=false
        mario.powerDown=false
        mario.dead=false
        mario.powerAnimTimer=0
        mario.dir="R"
        mario.crouch=false 
        mario.pos.x=16 mario.pos.y=20
        mario.velocity.x=0 mario.velocity.y=0
        mario.status="idle"
        mario.power=0
        playStage.pause=false
        mario.iFrames=-1
        bumpedBoundary=false
    end

    function mario:logic() --direction is seperate as its still rendered during pause
        bumpedBoundary=false
        if not playStage.pause and not mario.powerUp and not mario.powerDown then
            mario:calculateInput()
            mario:calculateMove()
        end
        mario:calculateAnim()
    end

    function mario:calculateInput() --turns arrow inputs into velocity (or crouch)
    --X movement
        if mario.power~=0 and (input.down==1) and mario.velocity.y==0 then
            mario.crouch=true
        elseif mario.power~=0 and (pixel2solid(mario.pos.x+2-playStage.cameraOffset,mario.pos.y-8) or pixel2solid(mario.pos.x+13-playStage.cameraOffset,mario.pos.y-8)) and mario.velocity.y==0 then
            mario.crouch=true 
        elseif mario.velocity.y==0 or mario.power==0 then mario.crouch=false end
        if mario.crouch then mario.velocity.x=mario.velocity.x*(0.93) end
        if (input.left==1 or input.right==1) and mario.crouch and mario.velocity.y==0 and (pixel2solid(mario.pos.x+2-playStage.cameraOffset,mario.pos.y-8) or pixel2solid(mario.pos.x+13-playStage.cameraOffset,mario.pos.y-8)) then
            if input.right==1 then mario.velocity.x=input.right
            elseif input.left==1 then mario.velocity.x=-input.left end
        elseif (input.left==1 or input.right==1) and (not mario.crouch or mario.velocity.y~=0) then
            if input.left==1 and mario.velocity.x>0.5 and mario.velocity.y==0 then mario.velocity.x=mario.velocity.x*(1-math.sin(mario.velocity.x/7)) --drifting slower
            elseif input.right==1 and mario.velocity.x<-0.5 and mario.velocity.y==0 then mario.velocity.x=mario.velocity.x*(1-math.sin(math.abs(mario.velocity.x)/7))
            else
            --max running speed 7
                if math.abs(mario.velocity.x)<2.0 then --walking under 2.0
                    mario.velocity.x=mario.velocity.x+input.right*(math.random(3,5)/10)
                    mario.velocity.x=mario.velocity.x-input.left*(math.random(3,5)/10)
                elseif math.abs(mario.velocity.x)<4.5 then
                    mario.velocity.x=mario.velocity.x+input.right*0.3
                    mario.velocity.x=mario.velocity.x-input.left*0.3
                elseif math.abs(mario.velocity.x)<7.01 and mario.velocity.y==0 then
                    mario.velocity.x=mario.velocity.x+input.right*0.12
                    mario.velocity.x=mario.velocity.x-input.left*0.12
                elseif math.abs(mario.velocity.x)<7.01 and mario.velocity.y~=0 and ((input.right==1 and mario.velocity.x<-0.5) or (input.left==1 and mario.velocity.x>0.5)) then
                    mario.velocity.x=mario.velocity.x+input.right*0.6
                    mario.velocity.x=mario.velocity.x-input.left*0.6 end end
        elseif not mario.crouch then mario.velocity.x=mario.velocity.x*(0.8)
        end
        if mario.velocity.x>7 then mario.velocity.x=7 elseif mario.velocity.x<-7 then mario.velocity.x=-7 end 
        if math.abs(mario.velocity.x)<0.4 then mario.velocity.x=0 end --movement minumum, prevents velocity of 0.00001626 for example
    --Y movement [TEMP CONTROL]
        if input.up==1 and not objAPI:gravityCheck(mario.pos.x,mario.pos.y,0) then  --up arrow pressed and on the floor (no double jumps)
            local runningBoost=0
            if math.abs(mario.velocity.x)>3 then runningBoost=math.abs(mario.velocity.x) end --momentum calculation
            mario.velocity.y=18+runningBoost --for a maximum of 25, jump ~5.5 blocks. without boost is 4 blocks (idle)
        else mario.velocity.y=mario.velocity.y*0.745 end --slow down upwards velocity when jumping (lower is floatier)
        if math.abs(mario.velocity.y)<0.6 then mario.velocity.y=0 end --movement minumum, prevents velocity of 0.00001626 for example
    end

    function mario:calculateMove() --use velocity to update position
        if mario.velocity.tempY ~= nil then
            mario.velocity.y=mario.velocity.tempY
            mario.velocity.tempY=nil
        end
    --X handling
        if objAPI:aggregateCheckX(mario.pos.x,mario.pos.y,mario.velocity.x,mario.power) then --no walls in X direction!
            mario.pos.x=mario.pos.x+mario.velocity.x --confirm movement
        else --wall detected
            mario.velocity.x=mario.velocity.x*0.5 --slow mario down so he can go closer to wall
            if objAPI:aggregateCheckX(mario.pos.x,mario.pos.y,mario.velocity.x,mario.power) then 
                mario.pos.x=mario.pos.x+mario.velocity.x
            end --prevent unsmooth stuttering near wall
        end
    --Y handling
        if not objAPI:bumpCheck(mario.pos.x,mario.pos.y,mario.velocity.y,mario.power) and mario.velocity.y>0 then --jump too large
            mario.velocity.y=mario.velocity.y*0.69 end -- 0.69 is 15.9/23... not a meme :< but yhyh this reduces jump size 
        if not objAPI:bumpCheck(mario.pos.x,mario.pos.y,0,mario.power) or not objAPI:bumpCheck(mario.pos.x,mario.pos.y,(mario.velocity.y)/2,mario.power) then --this shit "fixes" it, idk why but dont touch this
            local bigOffset=0
            if mario.power>0 and not mario.crouch then bigOffset=16 end
            if pixel2bumpable(mario.pos.x+2-playStage.cameraOffset,mario.pos.y-bigOffset-8) or pixel2bumpable(mario.pos.x+13-playStage.cameraOffset,mario.pos.y-bigOffset-8) and mario.velocity.y>0 then --something can be bumped here
                local xOffset
                if pixel2bumpable(mario.pos.x+8-playStage.cameraOffset,mario.pos.y-bigOffset-8) then --prioritise whatever is in the middle
                    xOffset=8
                elseif pixel2bumpable(mario.pos.x+2-playStage.cameraOffset,mario.pos.y-bigOffset-8) then
                    xOffset=2
                else
                    xOffset=13
                end
                local LOCs=pixel2plot(mario.pos.x+xOffset-playStage.cameraOffset,mario.pos.y-bigOffset-8)
                local xLOC=LOCs[1] local yLOC=LOCs[2]
                objAPI:handleBumpedBlock(xLOC,yLOC)
            end
            mario.velocity.y=-0.6
        end
        
        if objAPI:gravityCheck(mario.pos.x,mario.pos.y,0) and (mario.velocity.y<0.1) then --gravity occurs!
            local tempVelocity=0
            if objAPI:gravityCheck(mario.pos.x,mario.pos.y,8) then --large distance between floor
                if mario.velocity.y>-7 then -- terminal velocity: -7
                    mario.velocity.y=mario.velocity.y-1.7
                else mario.velocity.y=-7 end
            elseif objAPI:gravityCheck(mario.pos.x,mario.pos.y,mario.velocity.y) then --small distance
                for i=-7,-1 do
                    if objAPI:gravityCheck(mario.pos.x,mario.pos.y,-i) then
                        tempVelocity=i-1
                        mario.velocity.y=0
                        break end end end
            mario.pos.y=mario.pos.y-mario.velocity.y-tempVelocity
        elseif mario.velocity.y>0.1 then
            mario.pos.y=mario.pos.y-mario.velocity.y
        else
            mario.velocity.y=0
        end
    --OTHER (death plane)
        if mario.pos.y>216 then
            mario:kill()
        end
    end

    function mario:calculateAnim() --handles mario's visuals (walk cycles, animations etc)
        if not mario.powerUp and not mario.powerDown and not playStage.pause and not mario.dead then 
            mario.powerAnim=mario.power
            if not mario.crouch then
                if mario.velocity.y==0 then
                    if mario.velocity.x~=0 then
                        local velocity2cycle=0
                        if (math.abs(mario.velocity.x))>6.5 then velocity2cycle = 1.2 elseif (math.abs(mario.velocity.x))>4.5 then velocity2cycle = 0.6 elseif (math.abs(mario.velocity.x))>2 then velocity2cycle = 0.3 else velocity2cycle = 0.2 end
                        mario.status="walk"..math.floor((velocity2cycle*framesPassed)%3)+1 end
                    if input.left==1 and mario.velocity.x>0.01 then mario.status="drift" input.right=0 --drift animation if arrow key is going opposite way to velocity
                    elseif input.right==1 and mario.velocity.x<0.01 then mario.status="drift" input.left=0 end
                    if mario.velocity.x==0 then mario.status="idle" end
                    else mario.status="jump"
                end
            else mario.status="crouch"
            end
        elseif mario.powerUp and playStage.pause then
            if mario.power==1 and framesPassed-12<mario.powerAnimTimer then --growing to big mario
                local animOption=(math.ceil((framesPassed/2)))%2
                if animOption==1 then mario.powerAnim=1 mario.status="grow" else mario.powerAnim=0 mario.status="idle" end
            else
                local animOption=(math.ceil((framesPassed/2)))%3
                if animOption==0 then mario.powerAnim=0 mario.status="idle" elseif animOption==1 then mario.powerAnim=1 mario.status="grow" else mario.powerAnim=1 mario.status="idle" end
            end
            if framesPassed-24>mario.powerAnimTimer then
                mario.powerUp=false
                playStage.pause=false
            end
        elseif mario.powerDown and playStage.pause then
            local animOption=(math.ceil((framesPassed/flashingDelay)))%2
            if mario.power==0 and framesPassed-12<mario.powerAnimTimer then --powering down
                if animOption==1 then mario.powerAnim=mario.power+1 mario.status=mario.animCache else mario.powerAnim=mario.power+1 mario.status="invisible" end
            else
                if mario.power==0 and mario.animCache=="crouch" then
                    mario.animCache="walk1" end
                if animOption==1 then mario.powerAnim=mario.power mario.status=mario.animCache else mario.powerAnim=mario.power mario.status="invisible" end
            end
            if framesPassed-24>mario.powerAnimTimer then
                mario.powerDown=false
                playStage.pause=false
                mario.iFrames=framesPassed+30
            end
        elseif mario.dead then --mario death animation
            mario.powerAnim=0
            if mario.velocity.death<-0.5 and (framesPassed>mario.deathAnimTimer+12) then
                mario.pos.y=mario.pos.y+mario.velocity.death
                mario.velocity.death=(mario.velocity.death+0.2)*0.8
            elseif (mario.velocity.death<0 and mario.velocity.death>-0.5) or mario.velocity.death>0 then
                mario.velocity.death=(math.abs(mario.velocity.death)+0.3)*1.09
                mario.pos.y=mario.pos.y+mario.velocity.death
            end
            if mario.pos.y>220 then
                if not mario.respawnTime then
                    mario.respawnTime=framesPassed+18
                end
                if framesPassed>mario.respawnTime then
                    on.escapeKey()
                end
            end
        end
        if mario.iFrames>framesPassed and not mario.powerUp and not mario.dead and not mario.powerDown then
            local animOption=(math.ceil((framesPassed/flashingDelay)))%2
            if animOption==1 then mario.status="invisible" end
        end
        if not playStage.pause and not mario.powerUp and not mario.powerDown and not (mario.crouch and (pixel2ID(mario.pos.x+2-playStage.cameraOffset,mario.pos.y-8)==1 or pixel2ID(mario.pos.x+13-playStage.cameraOffset,mario.pos.y-8)==1)) and not objAPI:gravityCheck(mario.pos.x,mario.pos.y,0) and mario.velocity.y==0 then --on ground, not jumping
            if input.right==1 then mario.dir="R"
            elseif input.left==1 then mario.dir="L" end
        end
    end

    function mario:powerUpMario(optionalPower)
        if mario.power==0 and not mario.dead and not mario.powerUp and not mario.powerDown then mario.power=mario.power+1 --temporary, there is no fire anim
            playStage.pause=true
            mario.powerUp=true
            mario.powerDown=false
            mario.powerAnimTimer=framesPassed
        end
    end

    function mario:powerDownMario(optionalPower)
        --[[if mario.power==0 then death ]]
        if mario.power>0 and not mario.dead and mario.powerDown==false and not mario.powerUp and not (mario.iFrames>framesPassed) then mario.power=mario.power-1
            playStage.pause=true
            mario.powerDown=true
            mario.powerUp=false
            mario.powerAnimTimer=framesPassed
            mario.animCache=mario.status
        elseif not mario.dead and not (mario.iFrames>framesPassed) and mario.powerDown==false and mario.power==0 then
            mario.kill()
        end
    end

    function mario:kill()
        mario.velocity.death=-11
        mario.respawnTime=false
        mario.status="death"
        playStage.pause=true
        mario.powerDown=false
        mario.powerUp=false
        mario.dead=true
        mario.power=0
        mario.deathAnimTimer=framesPassed
    end

    function mario:draw(gc)
        local drawOffset=0
        if mario.powerAnim~=0 then drawOffset=16 end
        if mario.status~="invisible" then
            gc:drawImage(_G[mario.dir..mario.powerAnim..mario.status],mario.pos.x-playStage.cameraOffset,mario.pos.y-drawOffset+8) --draw..mario
        end
    end

--------------------------
-----GOOMBA FUNCTIONS-----
--------------------------
objGoomba=class()

    function objGoomba:init(classID,posX,posY,TYPE) --eg ("goomba77215",64,64,"goomba")
        self.velocity=0
        self.LEVEL="entityListInner"
        self.TYPE=TYPE
        self.classID=classID
        self.pos={}
        self.pos.x=posX
        self.pos.y=posY
        self.status=1
        self.dead=false
        self.despawnable=false --for now, unless pipe spawning added
        fromBlock = fromBlock and 1 or 0
        self.blockTimer=framesPassed+(fromBlock*7) --will not apply if fromBlock==0
        if mario.pos.x>self.pos.x then
            self.dir=1 -- -1 is left, 1 is right
        else self.dir=-1 end
    end

    function objGoomba:logic() --handle both movement and animation
        if not objAPI:aggregateCheckX(self.pos.x,self.pos.y,0,0,true) and not self.status==4 then --stuck in a block
            objAPI:destroy(self.classID,self.LEVEL) return end
        if not self.dead then
    --CHECK IF MARIO COLLIDED
            local marioSize=16
            if mario.power==0 then marioSize=0 end
            if checkCollision(mario.pos.x+1,mario.pos.y-marioSize+1,14,14+marioSize, self.pos.x+1,self.pos.y,14,1) and mario.velocity.y<0 then
                self.dead=true
                self.status=3
                self.deathAnimTimer=framesPassed+10
                mario.velocity.tempY=15
                objAPI:sendToFront(self.classID,self.LEVEL,self.LEVEL)
            elseif checkCollision(mario.pos.x+1,mario.pos.y-marioSize+1,14,14+marioSize, self.pos.x+1,self.pos.y+3,14,12) then
                mario:powerDownMario()
            end
    --CHECK IF HIT FROM BELOW (AND LATER FIREBALL)
            if bumpedBoundary ~= false then
                if checkCollision(self.pos.x+2,self.pos.y+14,12,3,bumpedBoundary[1],bumpedBoundary[2],bumpedBoundary[3],bumpedBoundary[4]) then
                    self.velocity=-11
                    self.dead=true
                    self.status=4
                end
            end
            if objAPI:checkShellCollision(self.classID,self.pos.x,self.pos.y,16,16) then
                self.velocity=-11
                self.dead=true
                self.status=4
            end
    --X AXIS
            if objAPI:aggregateCheckX(self.pos.x,self.pos.y,self.dir*2,0,true) then
                self.pos.x=self.pos.x+(self.dir*2)
            else
                self.dir=-self.dir
                if objAPI:aggregateCheckX(self.pos.x,self.pos.y,self.dir*2,0,true) then
                    self.pos.x=self.pos.x+(self.dir*2)
                elseif not objAPI:aggregateCheckX(self.pos.x,self.pos.y,0,0,true) then
                    objAPI:destroy(self.classID,self.LEVEL) end
            end
    --Y AXIS
            if self.velocity>0.1 and not self.dead then
                if objAPI:bumpCheck(self.pos.x,self.pos.y,self.velocity) then
                    self.pos.y=self.pos.y-self.velocity
                    self.velocity=self.velocity*0.7
                else 
                    self.velocity=0
                end
                if self.velocity<0.5 then
                    self.velocity=0
                end
            elseif objAPI:gravityCheck(self.pos.x,self.pos.y,0) and objAPI:aggregateCheckX(self.pos.x,self.pos.y,0) then --gravity
                if objAPI:gravityCheck(self.pos.x,self.pos.y,1) then
                    if objAPI:gravityCheck(self.pos.x,self.pos.y,5) then
                        self.pos.y=self.pos.y+5
                    else
                        self.pos.y=self.pos.y+1 end
                else
                    self.pos.y=self.pos.y+1 end
            end
    --ANIMATION
            if not self.dead then
                self.status=((math.ceil((framesPassed/4)))%2)+1
            end
        elseif self.status==4 then
            self.pos.x=self.pos.x+(2*self.dir)
            if self.velocity<-0.5 then
                self.pos.y=self.pos.y+self.velocity
                self.velocity=(self.velocity+0.2)*0.8
            elseif (self.velocity<0 and self.velocity>-0.5) or self.velocity>0 then
                self.velocity=(math.abs(self.velocity)+0.3)*1.09
                self.pos.y=self.pos.y+self.velocity
            end
            if self.pos.y<0 then
                objAPI:destroy(self.classID,self.LEVEL)
            end
        elseif self.status==3 and (self.deathAnimTimer<framesPassed) then
            objAPI:destroy(self.classID,self.LEVEL)
        end
    end

    function objGoomba:draw(gc)
        gc:drawImage(_G["texture_"..self.TYPE..self.status],self.pos.x-playStage.cameraOffset,self.pos.y+8)
    end

--------------------------
------KOOPA FUNCTIONS-----
--------------------------
objKoopa=class()

    function objKoopa:init(classID,posX,posY,TYPE)
        self.velocity=0
        self.LEVEL="entityListInner"
        self.TYPE=TYPE
        self.classID=classID
        self.pos={}
        self.pos.x=posX
        self.pos.y=posY
        self.status=1
        self.dead=false
        self.despawnable=false --for now, unless pipe spawning added
        fromBlock = fromBlock and 1 or 0
        self.blockTimer=framesPassed+(fromBlock*7) --will not apply if fromBlock==0
        if mario.pos.x>self.pos.x then
            self.dir=1 -- -1 is left, 1 is right
            self.facing="R_"
        else self.dir=-1 self.facing="L_" end
    end

    function objKoopa:logic() --handle both movement and animation
        self.turn=false
        if not objAPI:aggregateCheckX(self.pos.x,self.pos.y,0,0,true) and not self.status==4 then --stuck in a block
            objAPI:destroy(self.classID,self.LEVEL) return end
        if not self.dead then
    --CHECK IF MARIO COLLIDED
            local marioSize=16
            if mario.power==0 then marioSize=0 end
            if checkCollision(mario.pos.x+1,mario.pos.y-marioSize+1,14,14+marioSize, self.pos.x+1,self.pos.y,14,1) and mario.velocity.y<0 then --hit from above
                objAPI:destroy(self.classID,self.LEVEL)
                mario.velocity.tempY=15
                objAPI:createObj("shell"..string.sub(self.TYPE,6,8),self.pos.x,self.pos.y)
            elseif checkCollision(mario.pos.x+1,mario.pos.y-marioSize+1,14,14+marioSize, self.pos.x+1,self.pos.y+3,14,12) then --hit mario
                mario:powerDownMario()
            end
    --CHECK IF HIT FROM BELOW (AND LATER FIREBALL)
            if bumpedBoundary ~= false then
                if checkCollision(self.pos.x+2,self.pos.y+14,12,3,bumpedBoundary[1],bumpedBoundary[2],bumpedBoundary[3],bumpedBoundary[4]) then
                    self.velocity=-11
                    self.dead=true
                    self.status=3
                end
            end
            if objAPI:checkShellCollision(self.classID,self.pos.x,self.pos.y,16,16) then
                self.velocity=-11
                self.dead=true
                self.status=3
            end
    --X AXIS
            if objAPI:aggregateCheckX(self.pos.x,self.pos.y,self.dir*2,0,true) then
                self.pos.x=self.pos.x+(self.dir*2)
            else
                self.dir=-self.dir
                self.turn=true
                if objAPI:aggregateCheckX(self.pos.x,self.pos.y,self.dir*2,0,true) then
                    self.pos.x=self.pos.x+(self.dir*2)
                elseif not objAPI:aggregateCheckX(self.pos.x,self.pos.y,0,0,true) then
                    objAPI:destroy(self.classID,self.LEVEL) end
            end
    --Y AXIS
            if self.velocity>0.1 and not self.dead then
                if objAPI:bumpCheck(self.pos.x,self.pos.y,self.velocity) then
                    self.pos.y=self.pos.y-self.velocity
                    self.velocity=self.velocity*0.7
                else 
                    self.velocity=0
                end
                if self.velocity<0.5 then
                    self.velocity=0
                end
            elseif objAPI:gravityCheck(self.pos.x,self.pos.y,0,self.TYPE,self.dir) then --gravity
                local option = objAPI:gravityCheck(self.pos.x,self.pos.y,0,self.TYPE,self.dir)
                if option~="turn" and objAPI:aggregateCheckX(self.pos.x,self.pos.y,0,0,true)then
                    if objAPI:gravityCheck(self.pos.x,self.pos.y,1) then
                        if objAPI:gravityCheck(self.pos.x,self.pos.y,5) then
                            self.pos.y=self.pos.y+5
                        else
                            self.pos.y=self.pos.y+1 end
                    else
                        self.pos.y=self.pos.y+1 end
                elseif not self.turn then
                    self.dir=-self.dir end
            end
    --ANIMATION
            if not self.dead then
                self.status=((math.ceil((framesPassed/4)))%2)+1
            end
            if self.dir==1 then
                self.facing="R_" else self.facing="L_" end
        elseif self.status==3 then
            self.pos.x=self.pos.x+(2*self.dir)
            if self.velocity<-0.5 then
                self.pos.y=self.pos.y+self.velocity
                self.velocity=(self.velocity+0.2)*0.8
            elseif (self.velocity<0 and self.velocity>-0.5) or self.velocity>0 then
                self.velocity=(math.abs(self.velocity)+0.3)*1.09
                self.pos.y=self.pos.y+self.velocity
            end
            if self.pos.y<0 then
                objAPI:destroy(self.classID,self.LEVEL)
            end
        end
    end

    function objKoopa:draw(gc)
        gc:drawImage(_G["texture_"..self.facing..self.TYPE.."_"..self.status],self.pos.x-playStage.cameraOffset,self.pos.y-8) --eg "texture_L_koopa_G_1"
    end

--------------------------
------SHELL FUNCTIONS-----
--------------------------
objShell=class()

    function objShell:init(classID,posX,posY,TYPE,velocity) --eg ("shell_g77215",64,64,"shell_g",-4)
        self.velocity={}
        if velocity==nil then self.velocity.x=0 else self.velocity.x=velocity end
        self.velocity.y=0
        self.LEVEL="entityListInner"
        self.TYPE=TYPE
        self.classID=classID
        self.pos={}
        self.pos.x=posX
        self.pos.y=posY
        self.status=1
        self.dead=false
        self.hitTimer=0
        self.despawnable=true
    end
    function objShell:logic() --handle both movement and animation
        if not objAPI:aggregateCheckX(self.pos.x,self.pos.y,0,0,true) and not self.status==4 then --stuck in a block
            objAPI:destroy(self.classID,self.LEVEL) objAPI:removeShellBoundaries(self.classID) return end
        if self.pos.y>250 then
            objAPI:removeShellBoundaries(self.classID)
            objAPI:destroy(self.classID,self.LEVEL) return
        end
        if not self.dead then
    --CHECK IF MARIO COLLIDED
            local marioSize=16
            if mario.power==0 then marioSize=0 end            
            if checkCollision(mario.pos.x+1,mario.pos.y-marioSize+1,14,14+marioSize, self.pos.x+1,self.pos.y,14,1) and mario.velocity.y<0 and (self.hitTimer<framesPassed) then --hit from above
                self.hitTimer=framesPassed+6
                if self.velocity.x==0 then
                    if self.pos.x>mario.pos.x then self.velocity.x=4 else self.velocity.x=-4 end
                else self.velocity.x=0 objAPI:removeShellBoundaries(self.classID) end
                mario.velocity.tempY=15
            elseif checkCollision(mario.pos.x+1,mario.pos.y-marioSize+1,14,14+marioSize, self.pos.x+1,self.pos.y+3,14,12) and (self.hitTimer<framesPassed) then --hit mario from side
                self.hitTimer=framesPassed+6
                if self.velocity.x==0 then
                    if self.pos.x>mario.pos.x then self.velocity.x=4 else self.velocity.x=-4 end
                else
                    mario:powerDownMario() end
            end
    --CHECK IF HIT (AND LATER FIREBALL)
            if bumpedBoundary ~= false then
                if checkCollision(self.pos.x+2,self.pos.y+14,12,3,bumpedBoundary[1],bumpedBoundary[2],bumpedBoundary[3],bumpedBoundary[4]) then
                    self.velocity.y=-11
                    self.dead=true
                    self.status=3
                    objAPI:removeShellBoundaries(self.classID)
                end
            end
            if objAPI:checkShellCollision(self.classID,self.pos.x,self.pos.y,16,16) then
                self.velocity.y=-11
                self.dead=true
                self.status=3
                objAPI:removeShellBoundaries(self.classID)
            end
    --UPDATE SHELL BOUNDARY
            if self.velocity.x~=0 then
                objAPI:updateShellBoundaries(self.classID,self.pos.x,self.pos.y) end
    --X AXIS
            if objAPI:aggregateCheckX(self.pos.x,self.pos.y,self.velocity.x,0,true) then
                self.pos.x=self.pos.x+(self.velocity.x)
            else
                local offset=0
                if self.velocity.x>0 then offset=16 end
                if pixel2bumpable(self.pos.x+self.velocity.x+offset,self.pos.y,true) then
                    local v=pixel2plot(self.pos.x+self.velocity.x+offset,self.pos.y,true)
                    objAPI:handleBumpedBlock(v[1],v[2],true) end
                self.velocity.x=-self.velocity.x
                if objAPI:aggregateCheckX(self.pos.x,self.pos.y,self.velocity.x,0,true) then
                    self.pos.x=self.pos.x+(self.velocity.x)
                elseif not objAPI:aggregateCheckX(self.pos.x,self.pos.y,0,0,true) then
                    objAPI:destroy(self.classID,self.LEVEL) end
            end
    --Y AXIS
            if self.velocity.y>0.1 then
                if objAPI:bumpCheck(self.pos.x,self.pos.y,self.velocity.y) then
                    self.pos.y=self.pos.y-self.velocity.y
                    self.velocity.y=self.velocity.y*0.7
                else 
                    self.velocity.y=0
                end
                if self.velocity.y<0.5 then
                    self.velocity.y=0
                end
            elseif objAPI:gravityCheck(self.pos.x,self.pos.y,0) and objAPI:aggregateCheckX(self.pos.x,self.pos.y,0) then --gravity
                if objAPI:gravityCheck(self.pos.x,self.pos.y,1) then
                    if objAPI:gravityCheck(self.pos.x,self.pos.y,5) then
                        self.pos.y=self.pos.y+5
                    else
                        self.pos.y=self.pos.y+1 end
                else
                    self.pos.y=self.pos.y+1 end
            end
    --ANIMATION
            if not self.dead then
                self.status=1
            end
        elseif self.dead then
            objAPI:removeShellBoundaries(self.classID)
            self.pos.x=self.pos.x+(2*(self.velocity.x/self.velocity.x))
            if self.velocity.y<-0.5 then
                self.pos.y=self.pos.y+self.velocity.y
                self.velocity.y=(self.velocity.y+0.2)*0.8
            elseif (self.velocity.y<0 and self.velocity.y>-0.5) or self.velocity.y>0 then
                self.velocity.y=(math.abs(self.velocity.y)+0.3)*1.09
                self.pos.y=self.pos.y+self.velocity.y
            end
        end
    end
    function objShell:draw(gc)
        gc:drawImage(_G["texture_"..self.TYPE.."_"..self.status],self.pos.x-playStage.cameraOffset,self.pos.y+8) --"texture_shell_R_1"
    end

--------------------------
----POWER-UP FUNCTIONS----
--------------------------
objPowerUp=class()

    function objPowerUp:init(classID,posX,posY,TYPE,fromBlock) --eg ("mushroom37253",64,16,"mushroom",true)
        self.velocity=0
        self.LEVEL="entityListInner"
        self.TYPE=TYPE
        self.classID=classID
        self.pos={}
        self.pos.x=posX
        self.pos.y=posY-2
        self.despawnable=fromBlock
        fromBlock = fromBlock and 1 or 0
        self.blockTimer=framesPassed+(fromBlock*7) --will not apply if fromBlock==0
        if mario.pos.x>self.pos.x then
            self.dir=1 -- -1 is left, 1 is right
        else self.dir=-1 end
    end

    function objPowerUp:logic() --handle both movement and animation
    --CHECK IF MARIO COLLECTED
        local marioSize=16
        if mario.power==0 then marioSize=0 end
        if self.blockTimer<framesPassed then
            if checkCollision(mario.pos.x+1,mario.pos.y-marioSize+1,14,14+marioSize, self.pos.x+1,self.pos.y+1,14,14) then
                objAPI:destroy(self.classID,self.LEVEL)
                mario:powerUpMario() end
    --CHECK IF HIT FROM BELOW (AND LATER FIREBALL)
            if bumpedBoundary ~= false then
                if checkCollision(self.pos.x+2,self.pos.y+14,12,3,bumpedBoundary[1],bumpedBoundary[2],bumpedBoundary[3],bumpedBoundary[4]) then
                    self.velocity=7
                end
            end
            if objAPI:checkShellCollision(self.classID,self.pos.x,self.pos.y,16,16) and self.velocity==0 then
                self.velocity=7
            end
    --X AXIS
            if objAPI:aggregateCheckX(self.pos.x,self.pos.y,self.dir*2,0,true) then
                self.pos.x=self.pos.x+(self.dir*2)
            else
                self.dir=-self.dir
                if objAPI:aggregateCheckX(self.pos.x,self.pos.y,self.dir*2,0,true) then
                    self.pos.x=self.pos.x+(self.dir*2)
                elseif not objAPI:aggregateCheckX(self.pos.x,self.pos.y,0,0,true) then
                    objAPI:destroy(self.classID,self.LEVEL) end
            end
    --Y AXIS
            if self.velocity>0 and not self.dead then
                if objAPI:bumpCheck(self.pos.x,self.pos.y,self.velocity) then
                    self.pos.y=self.pos.y-self.velocity
                    self.velocity=self.velocity*0.7
                else 
                    self.velocity=0
                end
                if self.velocity<0.5 then
                    self.velocity=0
                end
            elseif objAPI:gravityCheck(self.pos.x,self.pos.y,0) and objAPI:aggregateCheckX(self.pos.x,self.pos.y,0) then --gravity
                if objAPI:gravityCheck(self.pos.x,self.pos.y,1) then
                    if objAPI:gravityCheck(self.pos.x,self.pos.y,5) then
                        self.pos.y=self.pos.y+5
                    else
                        self.pos.y=self.pos.y+1 end
                else
                    self.pos.y=self.pos.y+1 end
            end
        else
            self.pos.y=self.pos.y-2 --rise from block
        end
    end

    function objPowerUp:draw(gc)
        gc:drawImage(_G["texture_"..self.TYPE],self.pos.x-playStage.cameraOffset,self.pos.y+8) --
    end

--------------------------
-------BUMPED BLOCK-------
--------------------------
objBumpedBlock=class()

    function objBumpedBlock:create(blockX,blockY,TYPE,replaceWith,multiCoin)
        local classID="bumpedBlock"..#playStage.entityListOuter+#playStage.entityListInner+1+framesPassed+math.random(1,99999) --assign random ID
        table.insert(playStage.entityListOuter,tostring(classID))
        _G[classID]=objBumpedBlock(classID,blockX,blockY,TYPE,replaceWith,multiCoin)
    end
        
        
    function objBumpedBlock:init(classID,blockX,blockY,TYPE,replaceWith,multiCoin) --eg (23,6,"UsedBlock",false)
        self.LEVEL="entityListOuter"
        self.classID=classID
        self.blockpos={}
        self.blockpos.x=blockX
        self.blockpos.y=blockY
        self.pos={}
        self.pos.x=((self.blockpos.x-1)*16)
        self.pos.y=(212-16*(self.blockpos.y))+8
        self.TYPE=TYPE
        self.replaceWith=replaceWith
        self.animationSet={2,4,5,6,6,5,3,2,0} --predetermined pattern for block animation
        self.animationFrame=0
        self.drawOffset=0
        self.despawnable=true
        playStage.currentLevel["x"..self.blockpos.x.."y"..self.blockpos.y]=99 --barrier
    end

    function objBumpedBlock:logic()
        if self.animationFrame==#self.animationSet then
            playStage.currentLevel["x"..self.blockpos.x.."y"..self.blockpos.y]=self.replaceWith
            objAPI:destroy(self.classID,self.LEVEL)
        else
            self.drawOffset=(self.animationSet[self.animationFrame+1])
        end
        self.animationFrame=self.animationFrame+1
    end

    function objBumpedBlock:draw(gc)
        gc:drawImage(_G["texture_"..self.TYPE], ((self.blockpos.x-1)*16)-playStage.cameraOffset, (212-16*(self.blockpos.y))-self.drawOffset+8)
    end



--------------------------
-----BRICK PARTICLES------
--------------------------
objBrickParticle=class()

    function objBrickParticle:init(classID,xPos,yPos,thrust)
        objBrickParticleGlobalAnimIndex=objBrickParticleGlobalAnimIndex+1 --long var name but its funny lmao
        self.classID=classID
        self.pos={}
        self.velocity={}
        self.velocity.x=thrust*0.65
        self.velocity.y=math.abs(thrust*4)
        self.pos.x=xPos
        self.pos.y=yPos
        self.animIndex=objBrickParticleGlobalAnimIndex%4
        self.LEVEL="entityListParticle"
        self.status=1
        self.delay=true
    end

    function objBrickParticle:logic() 
    --ANIMATION
        self.status=((math.ceil((framesPassed/3)+self.animIndex))%4)+1
    --INITIAL FRAME
        if self.delay==true then self.delay=false return end
    --X AXIS
        self.pos.x=self.pos.x+self.velocity.x
    --Y AXIS
        if self.pos.y>216 then
            objAPI:destroy(self.classID,self.LEVEL) return
        elseif self.velocity.y>0 and self.velocity.y<0.7 then
            self.velocity.y=-0.5
        elseif self.velocity.y>0 then
            self.velocity.y=self.velocity.y*0.4
        elseif self.velocity.y<0 then
            self.velocity.y=(self.velocity.y-0.6)
        end
        self.pos.y=self.pos.y-(self.velocity.y*0.8)
    end

    function objBrickParticle:draw(gc)
        gc:drawImage(_G["texture_brick_piece"..self.status],self.pos.x-playStage.cameraOffset,self.pos.y+8)
    end
--------------------------
-----INGAME FUNCTIONS-----
--------------------------
playStage=class()
    --math.ceil(playStage.cameraOffset/16),math.ceil((320+playStage.cameraOffset)/16)
    function playStage.objLogic()
        if not playStage.pause and not mario.powerUp then
            local spawnOffsets={(math.ceil(playStage.cameraOffset/16)*16)-48,((math.ceil(320+playStage.cameraOffset)/16)*16)+48} --view distance plus 3 blocks
            for list=1,#playStage.entityLists do --do all entity lists
                local focusedList=tostring(playStage.entityLists[list])
                for i=1,#playStage[focusedList] do --for all entities within the list
                    if _G[tostring(playStage[focusedList][i])]~=nil then --if entity exists
                        if ((_G[tostring(playStage[focusedList][i])].pos.x) > (spawnOffsets[1])) and ((_G[tostring(playStage[focusedList][i])].pos.x) < (spawnOffsets[2])) then --if in view distance
                            _G[tostring(playStage[focusedList][i])]:logic()
                        elseif _G[tostring(playStage[focusedList][i])].despawnable then
                            if _G[tostring(playStage[focusedList][i])].pos.x<-16 or (_G[tostring(playStage[focusedList][i])].pos.x < spawnOffsets[1]) or ((_G[tostring(playStage[focusedList][i])].pos.x) > spawnOffsets[2]) then
                                objAPI:destroy(_G[tostring(playStage[focusedList][i])].classID,_G[tostring(playStage[focusedList][i])].LEVEL)
        end end end end end end
    end

    function playStage:handleInput()
        local delay=4 --mess of hardcoded shit, sorry
        
        arrowLeftDelay=arrowLeftDelay-1
        arrowRightDelay=arrowRightDelay-1
        arrowDownDelay=arrowDownDelay-1
        
        if arrowUpInput>arrowUpStor then input.up=1 else input.up=0 end
        if arrowDownInput>arrowDownStor then input.down=1 arrowDownDelay=delay+4 else input.down=0 end
        if arrowLeftInput>arrowLeftStor then input.left=1 arrowLeftDelay=delay else input.left=0 end
        if arrowRightInput>arrowRightStor then input.right=1 arrowRightDelay=delay else input.right=0 end
        
        arrowLeftStor=arrowLeftInput
        arrowRightStor=arrowRightInput
        arrowUpStor=arrowUpInput
        arrowDownStor=arrowDownInput
        
        if arrowLeftDelay>0 then input.left=1 end
        if arrowRightDelay>0 then input.right=1 end
        if arrowDownDelay>0 then input.down=1 end
    end

    function playStage:reset()
        playStage:randomise()
        playStage.cameraOffset=0
        playStage.spawnOffset=0
        mario:resetPos()
    end

    function playStage:randomise()
        for i=1,13 do --y axis
            for i2=0,50 do --x axis
                playStage.permLevel["x"..i2.."y"..i]=math.random(-2,1)
                if math.random(1,15)==1 then playStage.permLevel["x"..i2.."y"..i]=2 end
            end
        end
        playStage.permLevel["x2y12"]=0
        playStage.currentLevel=copyLevel(playStage.permLevel)
    end

    function playStage:drawTerrain(gc) --rendered in rows from bottom to top w/ the rows from left to right
        for i=1,13 do --bottom to top, vertically (row 14 is reserved for info and is not drawn)
            for i2=math.ceil(playStage.cameraOffset/16),math.ceil((320+playStage.cameraOffset)/16) do --left to right, horizontally, only draw what is visible on screen
                local blockID=getID(i2,i)
                if type(blockID)=='number' then --its a tile
                    if blockID<0 then blockID=0 end
                    if blockIndex[blockID]["texture"][1]~=nil then
                        local frameForAnim=(math.floor((framesPassed/4)%#blockIndex[blockID]["texture"]))+1 --(support for animations)
                        gc:drawImage(_G[tostring(blockIndex[blockID]["texture"][frameForAnim])], ((i2-1)*16)-playStage.cameraOffset, 212-16*(i)+8) end
                else --load the object
                    objAPI:createObj(blockID,(i2-1)*16,212-16*(i),false)
                    playStage.currentLevel["x"..i2.."y"..i]=0
    end end end end

    function playStage:generate()
        playStage.cameraOffset=0
        playStage.entityListOuter={}
        playStage.entityListInner={}
        playStage.entityListParticle={}
        playStage.shellBoundaries={}
        playStage.entityLists={"entityListInner","entityListOuter","entityListParticle"} --this must be changed 
        playStage.permLevel=string2level("<73-v1>,1,1,0,1,0,0,2,0,0,0,0,0,0,1,1,0,1,0,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,goomba,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,0,0,0,0,0,0,0,0,1,1,2,2,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,goomba,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,5,5,mushroom,0,0,0,0,0,0,1,1,5,5,5,5,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0,0,0,1,1,0,0,0,2,goomba,0,0,0,0,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,mushroom,mushroom,0,0,0,0,0,0,0,0,0,1,0,mushroom,mushroom,0,0,0,0,0,0,0,0,0,1,0,mushroom,mushroom,0,0,0,0,0,0,0,0,0,1,0,mushroom,mushroom,0,0,0,0,0,0,0,0,0,1,0,mushroom,mushroom,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,goomba,goomba,goomba,goomba,goomba,goomba,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0")
        playStage.currentLevel=copyLevel(playStage.permLevel)
    end

    function playStage:init()
        mario:init()
        playStage.currentLevel={}
        playStage.permLevel={}
        playStage:generate()
        playStage.cameraOffset=0
        mario.active=true
        playStage.active=true
        playStage.pause=false
    end

    function playStage:paint(gc)
        cleanupListDestroy={}
        cleanupListTransfer={}
        cleanupListShell={}
        if mario.pos.x>96 then playStage.cameraOffset=mario.pos.x-96 end --if progressed past initial 96 pixels/6 blocks
        if mario.pos.x<96 then playStage.cameraOffset=0 end
        if mario.pos.x>((playStage.currentLevel.END-14)*16) then playStage.cameraOffset=((playStage.currentLevel.END-14)*16)-96 end --end of stage as declared by the level data
        gc:setColorRGB(97, 133, 248)
        gc:fillRect(0,0,320,218) --backdrop
        gc:setColorRGB(255,255,100)   
    
    --logic
        playStage:handleInput()
        playStage:objLogic()
        
    --drawing
        playStage:drawTerrain(gc)
        local spawnOffsets={(math.ceil(playStage.cameraOffset/16)*16)-48,((math.ceil(320+playStage.cameraOffset)/16)*16)+48} --view distance plus 3 blocks
        for list=1,#playStage.entityLists do --do all entity lists
            local focusedList=tostring(playStage.entityLists[list])
            for i=1,#playStage[focusedList] do
                if _G[tostring(playStage[focusedList][i])]~=nil then
                    if not ((_G[tostring(playStage[focusedList][i])].pos.x) < (spawnOffsets[1])) and not ((_G[tostring(playStage[focusedList][i])].pos.x) > (spawnOffsets[2])) then
                        _G[playStage[focusedList][i]]:draw(gc) end end
            end
        end
        objAPI:cleanup() --transfers layers, destroys queued objects
        
    --mario stuff (seperate to avoid certain issues from objects trying to interact with mario)
        mario:logic()
        mario:draw(gc)
end
--------------------------
------FRAME FUNCTIONS-----
--------------------------
function on.paint(gc)
    if not playStage.pause or mario.powerUp or mario.powerDown or mario.dead then
        framesPassed=framesPassed+1
    end
    playStage:paint(gc)
    gc:drawString("select: "..blockSelectionListTEMP[(blockSelectionTEMP%(#blockSelectionListTEMP))+1].." velY: "..mario.velocity.y, 0, 17, top)
    local highlightedx=pixel2plot(mousePos.x,mousePos.y-8)[1]
    local highlightedy=pixel2plot(mousePos.x,mousePos.y-8)[2]
    gc:drawString("CO: "..playStage.cameraOffset.." entities: "..#playStage.entityListOuter+#playStage.entityListParticle+#playStage.entityListInner, 0, 32, top)
    gc:drawString("blockX "..highlightedx.." blockY "..highlightedy.." id: "..getID(highlightedx,highlightedy).." x"..mousePos.x.."y"..mousePos.y+8, 0, 48, top)
    gc:drawString("v"..versText, 0, 190+20, top)

    local pixels = plot2pixel(highlightedx,highlightedy,true)
    gc:drawRect(pixels[1],pixels[2]+8,16,16)

    for i=1,#debugBoxes do
        gc:drawRect(debugBoxes[i][1]-playStage.cameraOffset,debugBoxes[i][2]+8,debugBoxes[i][3],debugBoxes[i][4])
    end
    debugBoxes={}
end



--------------------------
---------START-UP---------
--------------------------
    timer.start(0.01)
    playStage=playStage()
    print("Running!",versText)
