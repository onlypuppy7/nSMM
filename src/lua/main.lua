-- local ok, err = pcall(function()
    require("love2d.setup")

    __PC.scale = 2

    -- gc=platform.gc

    require("nsmm")

    -- loadTextures("tile")

    -- Brick=image.new

    -- local i=1

    -- function on.paint(gc)
    --     print("onpaint", gc)

    --     -- local w,h=platform.window:width(),platform.window:height()
    --     -- gc:setColorRGB(0,0,0)
    --     -- gc:fillRect(0,0,w,h)
    --     -- gc:setColorRGB(255,255,255)
    --     -- gc:drawString("hi", 20, 20)
    --     -- pswitchimage = image.new("\16\0\0\0\16\0\0\0\0\0\0\0 \0\0\0\16\0\1\0\0\0\0\0\0\0\0\0\0\0t\132t\132t\132t\132t\132t\132\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\132t\132\127\173\127\173\127\173\127\173\127\173\127\173t\132t\132\0\0\0\0\0\0\0\0\0\0t\132\127\173\127\173\255\255\127\173\127\173\127\173\127\173\127\173\127\173\127\173t\132\0\0\0\0\0\0t\132\127\173\255\255\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173t\132\0\0\0\0t\132\255\255\127\173\127\173u\132u\132u\132u\132u\132\127\173\127\173\127\173\127\173t\132\0\0t\132\127\173\255\255\127\173\127\173u\132u\132u\132u\132u\132u\132\127\173\127\173\127\173\127\173t\132t\132\127\173\255\255\127\173\127\173u\132u\132\127\173\127\173u\132u\132\127\173\127\173\127\173\127\173t\132t\132\127\173\255\255\127\173\127\173u\132u\132u\132u\132u\132u\132\127\173\127\173\127\173\127\173t\132t\132\127\173\127\173\127\173\127\173u\132u\132u\132u\132u\132\127\173\127\173\127\173\127\173\127\173t\132t\132\127\173\127\173\127\173\127\173u\132u\132\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173t\132t\132\127\173\127\173\127\173\127\173u\132u\132\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173t\132t\132\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173\127\173t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255t\132t\132\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132t\132")
    --     -- gc:drawImage(pswitchimage, 10, 10)
    --     -- gc:drawImage(Brick, 50, 50)
    --     i = (i or -1) + 1
    --     gc:drawImage(Brick, 50 + i, 50)
    --     print(Brick:height(), Brick:width())
    -- end

    -- timer.start(0.2)
    -- function on.timer()
    --     platform.window:invalidate() --refreshes screen
    -- end

    -- require("nsmm")

    -- require("courseworld.courses")
-- end)
-- if not ok then print("nSMM err:", err) end



-- -- Donut on TI-Nspire with fillRect shading
-- local A, B = 0, 0

-- function on.paint(gc)
--     local z = {}
--     local buffer = {}
--     local bwidth, bheight = 80, 45
--     local scaleX, scaleY = 1, 1

--     for i = 0, bwidth * bheight do
--         z[i] = 0
--         buffer[i] = 0 -- store shade here
--     end

--     for j = 0, 6.28, 0.07 do
--         for i = 0, 6.28, 0.02 do
--             local c = math.sin(i)
--             local d = math.cos(j)
--             local e = math.sin(A)
--             local f = math.sin(j)
--             local g = math.cos(A)
--             local h = d + 2
--             local D = 1 / (c * h * e + f * g + 5)
--             local l = math.cos(i)
--             local m = math.cos(B)
--             local n = math.sin(B)
--             local t = c * h * g - f * e
--             local x = math.floor(bwidth / 2 + bwidth / 2 * D * (l * h * m - t * n))
--             local y = math.floor(bheight / 2 + bheight / 2 * D * (l * h * n + t * m))
--             local o = x + bwidth * y
--             local N = math.floor(12 * ((f * e - c * d * g) * m - c * d * e - f * g - l * d * n))
--             if x >= 0 and x < bwidth and y >= 0 and y < bheight and D > z[o] then
--                 z[o] = D
--                 buffer[o] = math.max(0, math.min(12, N + 6)) -- store clamped shade here
--             end
--         end
--     end

--     -- now draw once per pixel after loops
--     for y = 0, bheight - 1 do
--         for x = 0, bwidth - 1 do
--             local o = x + bwidth * y
--             local shade = buffer[o]
--             if shade > 0 then
--                 gc:setColorRGB(15 * shade, 15 * shade, 15 * shade)
--                 gc:fillRect(x * scaleX, y * scaleY, scaleX + 1, scaleY + 1)
--             end
--         end
--     end
-- end

-- function on.timer()
--     A = A + 0.04
--     B = B + 0.02
--     platform.window:invalidate()
-- end

-- function on.construction()
--     timer.start(0.05)
-- end