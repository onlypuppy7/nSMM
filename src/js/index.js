import { bundle } from 'luabundle';
import luamin from 'luamin';
import fs from 'fs';
import path from 'path';

const luaDir = 'src/lua';
const luaFilePath = path.resolve(luaDir+'/main.lua');

let bundledLuaOG = bundle(luaFilePath, {
    paths: [luaDir+'/?.lua'],
});

console.log('Bundled Lua code length:', bundledLuaOG.length);

function convertSpecialChars(luaCode) {
    for (let iter = 3; iter > 0; iter--) {
        const regex = new RegExp(`\\\\([0-9]{${iter}})[\\\\ A-z@%]`, 'g');

        luaCode = luaCode.replace(regex, (match, digits) => {
            const num = String(parseInt(digits, 10));
            return match.replace(digits, num);
        });
    };
    return luaCode;
};

let bundledLua = convertSpecialChars(convertSpecialChars(bundledLuaOG));

console.log('Converted special characters in Lua code length:', bundledLua.length, (bundledLua.length / bundledLuaOG.length * 100).toFixed(2) + '% of original size');

const minifiedLua = 
`--nSMM Bundle
--Generated by nSMM Lua Bundler to reduce file size and improve loading performance
--Full source available at https://github.com/onlypuppy7/nSMM
`
+luamin.minify(bundledLua);

console.log('Minified Lua code length:', minifiedLua.length, (minifiedLua.length / bundledLuaOG.length * 100).toFixed(2) + '% of original size');

const outputBundleFilePath = path.resolve('dist/nSMM.lua');
const outputMinifiedFilePath = path.resolve('dist/nSMM.min.lua');

fs.mkdirSync(path.dirname(outputBundleFilePath), { recursive: true });

fs.writeFileSync(outputBundleFilePath, bundledLua);
fs.writeFileSync(outputMinifiedFilePath, minifiedLua);
console.log('Bundled Lua code written to:', outputBundleFilePath);
console.log('Minified Lua code written to:', outputMinifiedFilePath);